{"ast":null,"code":"/* eslint-disable object-shorthand */\nvar _ = require('lodash').noConflict(),\n  util = require('../../util'),\n  inherits = require('inherits'),\n  v2Common = require('../../common/v2'),\n  BaseBuilders = require('../v2.0.0/converter-v2-to-v1').Builders,\n  Builders;\ninherits(Builders = function () {\n  Builders.super_.apply(this, arguments);\n}, BaseBuilders);\n_.assign(Builders.prototype, {\n  /**\n   * Converts arrays of v2.1 style auth params to their v1.0.0 equivalent objects.\n   *\n   * @param {Object} entity - A v2.1 compliant wrapped auth manifest.\n   * @param {?Object} options - The set of options for the current auth cleansing operation.\n   * @param {?Boolean} [options.includeNoauth=false] - When set to true, noauth is set to null.\n   * @returns {Object} - A v1 compliant set of auth helper attributes.\n   */\n  auth: function (entity, options) {\n    return util.sanitizeAuthArray(entity, options);\n  }\n});\nmodule.exports = {\n  input: '2.1.0',\n  output: '1.0.0',\n  Builders: Builders,\n  /**\n   * Converts a single V2 item to a V1 request.\n   *\n   * @param {Object} request - The request to be converted.\n   * @param {Object} options - The set of options for request conversion.\n   * @param {Function} callback - The function to be invoked after conversion has completed.\n   */\n  convertSingle: function (request, options, callback) {\n    var err,\n      converted,\n      clone = _.cloneDeep(request),\n      builders = new Builders(options);\n    try {\n      clone = v2Common.populateIds(clone);\n      converted = builders.request(clone);\n    } catch (e) {\n      err = e;\n    }\n    if (callback) {\n      return callback(err, converted);\n    }\n    if (err) {\n      throw err;\n    }\n    return converted;\n  },\n  /**\n   * Converts a single V2 item to a V1 request.\n   *\n   * @param {Object} response - The response to be converted.\n   * @param {Object} options - The set of options for request conversion.\n   * @param {Function} callback - The function to be invoked after conversion has completed.\n   */\n  convertResponse: function (response, options, callback) {\n    var builders = new Builders(options),\n      converted,\n      err;\n    try {\n      converted = builders.response(_.cloneDeep(response));\n    } catch (e) {\n      err = e;\n    }\n    if (callback) {\n      return callback(err, converted);\n    }\n    if (err) {\n      throw err;\n    }\n    return converted;\n  },\n  /**\n   * Converts a V2 collection to a V1 collection (performs ID replacement, etc as necessary).\n   *\n   * @param {Object} collection - The collection to be converted.\n   * @param {Object} options - The set of options for request conversion.\n   * @param {Function} callback - The function to be invoked after conversion has completed.\n   */\n  convert: function (collection, options, callback) {\n    collection = _.cloneDeep(collection);\n    var auth,\n      events,\n      variables,\n      builders = new Builders(options),\n      authOptions = {\n        excludeNoauth: true\n      },\n      units = ['order', 'folders_order', 'folders', 'requests'],\n      varOpts = options && {\n        fallback: options.env,\n        retainIds: options.retainIds\n      },\n      id = _.get(collection, 'info._postman_id') || _.get(collection, 'info.id'),\n      info = collection && collection.info,\n      newCollection = {\n        id: id && options && options.retainIds ? id : util.uid(),\n        name: info && info.name\n      };\n\n    // ensure that each item has an id\n    collection = v2Common.populateIds(collection);\n    try {\n      // eslint-disable-next-line max-len\n      newCollection.description = builders.description(info && info.description);\n      (auth = builders.auth(collection, authOptions)) && (newCollection.auth = auth);\n      (events = builders.events(collection)) && (newCollection.events = events);\n      (variables = builders.variables(collection, varOpts)) && (newCollection.variables = variables);\n      util.addProtocolProfileBehavior(collection, newCollection);\n      units.forEach(function (unit) {\n        newCollection[unit] = builders[unit](collection);\n      });\n    } catch (e) {\n      if (callback) {\n        return callback(e, null);\n      }\n      throw e;\n    }\n    if (callback) {\n      return callback(null, newCollection);\n    }\n    return newCollection;\n  }\n};","map":{"version":3,"names":["_","require","noConflict","util","inherits","v2Common","BaseBuilders","Builders","super_","apply","arguments","assign","prototype","auth","entity","options","sanitizeAuthArray","module","exports","input","output","convertSingle","request","callback","err","converted","clone","cloneDeep","builders","populateIds","e","convertResponse","response","convert","collection","events","variables","authOptions","excludeNoauth","units","varOpts","fallback","env","retainIds","id","get","info","newCollection","uid","name","description","addProtocolProfileBehavior","forEach","unit"],"sources":["/Users/Qusai.Qishta/node_modules/postman-collection-transformer/lib/converters/v2.1.0/converter-v21-to-v1.js"],"sourcesContent":["/* eslint-disable object-shorthand */\nvar _ = require('lodash').noConflict(),\n    util = require('../../util'),\n    inherits = require('inherits'),\n\n    v2Common = require('../../common/v2'),\n    BaseBuilders = require('../v2.0.0/converter-v2-to-v1').Builders,\n\n    Builders;\n\ninherits(Builders = function () {\n    Builders.super_.apply(this, arguments);\n}, BaseBuilders);\n\n_.assign(Builders.prototype, {\n    /**\n     * Converts arrays of v2.1 style auth params to their v1.0.0 equivalent objects.\n     *\n     * @param {Object} entity - A v2.1 compliant wrapped auth manifest.\n     * @param {?Object} options - The set of options for the current auth cleansing operation.\n     * @param {?Boolean} [options.includeNoauth=false] - When set to true, noauth is set to null.\n     * @returns {Object} - A v1 compliant set of auth helper attributes.\n     */\n    auth: function (entity, options) {\n        return util.sanitizeAuthArray(entity, options);\n    }\n});\n\nmodule.exports = {\n    input: '2.1.0',\n    output: '1.0.0',\n    Builders: Builders,\n\n    /**\n     * Converts a single V2 item to a V1 request.\n     *\n     * @param {Object} request - The request to be converted.\n     * @param {Object} options - The set of options for request conversion.\n     * @param {Function} callback - The function to be invoked after conversion has completed.\n     */\n    convertSingle: function (request, options, callback) {\n        var err,\n            converted,\n            clone = _.cloneDeep(request),\n            builders = new Builders(options);\n\n        try {\n            clone = v2Common.populateIds(clone);\n            converted = builders.request(clone);\n        }\n        catch (e) { err = e; }\n\n        if (callback) { return callback(err, converted); }\n\n        if (err) { throw err; }\n\n        return converted;\n    },\n\n    /**\n     * Converts a single V2 item to a V1 request.\n     *\n     * @param {Object} response - The response to be converted.\n     * @param {Object} options - The set of options for request conversion.\n     * @param {Function} callback - The function to be invoked after conversion has completed.\n     */\n    convertResponse: function (response, options, callback) {\n        var builders = new Builders(options),\n            converted,\n            err;\n\n        try { converted = builders.response(_.cloneDeep(response)); }\n        catch (e) { err = e; }\n\n        if (callback) { return callback(err, converted); }\n\n        if (err) { throw err; }\n\n        return converted;\n    },\n\n    /**\n     * Converts a V2 collection to a V1 collection (performs ID replacement, etc as necessary).\n     *\n     * @param {Object} collection - The collection to be converted.\n     * @param {Object} options - The set of options for request conversion.\n     * @param {Function} callback - The function to be invoked after conversion has completed.\n     */\n    convert: function (collection, options, callback) {\n        collection = _.cloneDeep(collection);\n\n        var auth,\n            events,\n            variables,\n            builders = new Builders(options),\n            authOptions = { excludeNoauth: true },\n            units = ['order', 'folders_order', 'folders', 'requests'],\n            varOpts = options && { fallback: options.env, retainIds: options.retainIds },\n            id = _.get(collection, 'info._postman_id') || _.get(collection, 'info.id'),\n            info = collection && collection.info,\n            newCollection = {\n                id: id && options && options.retainIds ? id : util.uid(),\n                name: info && info.name\n            };\n\n        // ensure that each item has an id\n        collection = v2Common.populateIds(collection);\n        try {\n            // eslint-disable-next-line max-len\n            newCollection.description = builders.description(info && info.description);\n            (auth = builders.auth(collection, authOptions)) && (newCollection.auth = auth);\n            (events = builders.events(collection)) && (newCollection.events = events);\n            (variables = builders.variables(collection, varOpts)) && (newCollection.variables = variables);\n            util.addProtocolProfileBehavior(collection, newCollection);\n\n            units.forEach(function (unit) {\n                newCollection[unit] = builders[unit](collection);\n            });\n        }\n        catch (e) {\n            if (callback) { return callback(e, null); }\n            throw e;\n        }\n\n        if (callback) { return callback(null, newCollection); }\n\n        return newCollection;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}