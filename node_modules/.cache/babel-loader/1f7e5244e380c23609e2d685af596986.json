{"ast":null,"code":"var progress = require('cli-progress'),\n  ProgressReporter;\n\n/**\n * Little reporter that generates a collection progress status bar on CLI.\n *\n * @param {Object} newman - A run object with event handler specification methods.\n * @param {Function} newman.on - An event setter method that provides hooks for reporting collection run progress.\n * @param {Object} reporterOptions - A set of reporter specific run options.\n * @param {Object} options - A set of generic collection run options.\n * @returns {*}\n */\nProgressReporter = function (newman, reporterOptions, options) {\n  if (options.silent || reporterOptions.silent) {\n    return;\n  }\n  var bar = new progress.Bar({});\n  newman.on('start', function (err, o) {\n    if (err) {\n      return;\n    }\n    bar.start(o.cursor.length * o.cursor.cycles, 0);\n  });\n  newman.on('item', function () {\n    bar.increment();\n  });\n  newman.on('done', function () {\n    bar.stop();\n  });\n};\nProgressReporter.prototype.dominant = true;\nmodule.exports = ProgressReporter;","map":{"version":3,"names":["progress","require","ProgressReporter","newman","reporterOptions","options","silent","bar","Bar","on","err","o","start","cursor","length","cycles","increment","stop","prototype","dominant","module","exports"],"sources":["/Users/Qusai.Qishta/node_modules/newman/lib/reporters/progress.js"],"sourcesContent":["var progress = require('cli-progress'),\n    ProgressReporter;\n\n/**\n * Little reporter that generates a collection progress status bar on CLI.\n *\n * @param {Object} newman - A run object with event handler specification methods.\n * @param {Function} newman.on - An event setter method that provides hooks for reporting collection run progress.\n * @param {Object} reporterOptions - A set of reporter specific run options.\n * @param {Object} options - A set of generic collection run options.\n * @returns {*}\n */\nProgressReporter = function (newman, reporterOptions, options) {\n    if (options.silent || reporterOptions.silent) {\n        return;\n    }\n\n    var bar = new progress.Bar({});\n\n    newman.on('start', function (err, o) {\n        if (err) { return; }\n\n        bar.start(o.cursor.length * o.cursor.cycles, 0);\n    });\n\n    newman.on('item', function () {\n        bar.increment();\n    });\n\n    newman.on('done', function () {\n        bar.stop();\n    });\n};\n\nProgressReporter.prototype.dominant = true;\nmodule.exports = ProgressReporter;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,cAAc,CAAC;EAClCC,gBAAgB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,gBAAgB,GAAG,UAAUC,MAAM,EAAEC,eAAe,EAAEC,OAAO,EAAE;EAC3D,IAAIA,OAAO,CAACC,MAAM,IAAIF,eAAe,CAACE,MAAM,EAAE;IAC1C;EACJ;EAEA,IAAIC,GAAG,GAAG,IAAIP,QAAQ,CAACQ,GAAG,CAAC,CAAC,CAAC,CAAC;EAE9BL,MAAM,CAACM,EAAE,CAAC,OAAO,EAAE,UAAUC,GAAG,EAAEC,CAAC,EAAE;IACjC,IAAID,GAAG,EAAE;MAAE;IAAQ;IAEnBH,GAAG,CAACK,KAAK,CAACD,CAAC,CAACE,MAAM,CAACC,MAAM,GAAGH,CAAC,CAACE,MAAM,CAACE,MAAM,EAAE,CAAC,CAAC;EACnD,CAAC,CAAC;EAEFZ,MAAM,CAACM,EAAE,CAAC,MAAM,EAAE,YAAY;IAC1BF,GAAG,CAACS,SAAS,EAAE;EACnB,CAAC,CAAC;EAEFb,MAAM,CAACM,EAAE,CAAC,MAAM,EAAE,YAAY;IAC1BF,GAAG,CAACU,IAAI,EAAE;EACd,CAAC,CAAC;AACN,CAAC;AAEDf,gBAAgB,CAACgB,SAAS,CAACC,QAAQ,GAAG,IAAI;AAC1CC,MAAM,CAACC,OAAO,GAAGnB,gBAAgB"},"metadata":{},"sourceType":"script"}