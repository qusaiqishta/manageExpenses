{"ast":null,"code":"// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl'];\nconst parseOptions = options => !options ? {} : typeof options !== 'object' ? {\n  loose: true\n} : opts.filter(k => options[k]).reduce((options, k) => {\n  options[k] = true;\n  return options;\n}, {});\nmodule.exports = parseOptions;","map":{"version":3,"names":["opts","parseOptions","options","loose","filter","k","reduce","module","exports"],"sources":["/Users/Qusai.Qishta/node_modules/semver/internal/parse-options.js"],"sourcesContent":["// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n"],"mappings":"AAAA;AACA;AACA,MAAMA,IAAI,GAAG,CAAC,mBAAmB,EAAE,OAAO,EAAE,KAAK,CAAC;AAClD,MAAMC,YAAY,GAAGC,OAAO,IAC1B,CAACA,OAAO,GAAG,CAAC,CAAC,GACX,OAAOA,OAAO,KAAK,QAAQ,GAAG;EAAEC,KAAK,EAAE;AAAK,CAAC,GAC7CH,IAAI,CAACI,MAAM,CAACC,CAAC,IAAIH,OAAO,CAACG,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAACJ,OAAO,EAAEG,CAAC,KAAK;EACpDH,OAAO,CAACG,CAAC,CAAC,GAAG,IAAI;EACjB,OAAOH,OAAO;AAChB,CAAC,EAAE,CAAC,CAAC,CAAC;AACRK,MAAM,CAACC,OAAO,GAAGP,YAAY"},"metadata":{},"sourceType":"script"}