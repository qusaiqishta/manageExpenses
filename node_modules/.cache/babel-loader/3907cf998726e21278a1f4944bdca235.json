{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nvar _handlebarsRuntime = require('./handlebars.runtime');\nvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);\n\n// Compiler imports\n\nvar _handlebarsCompilerAst = require('./handlebars/compiler/ast');\nvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\nvar _handlebarsCompilerBase = require('./handlebars/compiler/base');\nvar _handlebarsCompilerCompiler = require('./handlebars/compiler/compiler');\nvar _handlebarsCompilerJavascriptCompiler = require('./handlebars/compiler/javascript-compiler');\nvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\nvar _handlebarsCompilerVisitor = require('./handlebars/compiler/visitor');\nvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\nvar _create = _handlebarsRuntime2['default'].create;\nfunction create() {\n  var hb = _create();\n  hb.compile = function (input, options) {\n    return _handlebarsCompilerCompiler.compile(input, options, hb);\n  };\n  hb.precompile = function (input, options) {\n    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n  };\n  hb.AST = _handlebarsCompilerAst2['default'];\n  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n  hb.Parser = _handlebarsCompilerBase.parser;\n  hb.parse = _handlebarsCompilerBase.parse;\n  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;\n  return hb;\n}\nvar inst = create();\ninst.create = create;\n_handlebarsNoConflict2['default'](inst);\ninst.Visitor = _handlebarsCompilerVisitor2['default'];\ninst['default'] = inst;\nexports['default'] = inst;\nmodule.exports = exports['default'];","map":{"version":3,"mappings":";;;;;;;;;;iCAAoB,sBAAsB;;;;;qCAG1B,2BAA2B;;sCAKpC,4BAA4B;0CACW,gCAAgC;oDAC/C,2CAA2C;;yCACtD,+BAA+B;;oCAE5B,0BAA0B;;AAEjD,IAAIA,OAAO,GAAGC,+BAAQC,MAAM;AAC5B,SAASA,MAAM,GAAG;EAChB,IAAIC,EAAE,GAAGH,OAAO,EAAE;EAElBG,EAAE,CAACC,OAAO,GAAG,UAASC,KAAK,EAAEC,OAAO,EAAE;IACpC,OAAOC,oCAAQF,KAAK,EAAEC,OAAO,EAAEH,EAAE,CAAC;GACnC;EACDA,EAAE,CAACK,UAAU,GAAG,UAASH,KAAK,EAAEC,OAAO,EAAE;IACvC,OAAOC,uCAAWF,KAAK,EAAEC,OAAO,EAAEH,EAAE,CAAC;GACtC;EAEDA,EAAE,CAACM,GAAG,qCAAM;EACZN,EAAE,CAACO,QAAQ,uCAAW;EACtBP,EAAE,CAACQ,kBAAkB,oDAAqB;EAC1CR,EAAE,CAACS,MAAM,iCAAS;EAClBT,EAAE,CAACU,KAAK,gCAAQ;EAChBV,EAAE,CAACW,sBAAsB,iDAAyB;EAElD,OAAOX,EAAE;;AAGX,IAAIY,IAAI,GAAGb,MAAM,EAAE;AACnBa,IAAI,CAACb,MAAM,GAAGA,MAAM;AAEpBc,kCAAWD,IAAI,CAAC;AAEhBA,IAAI,CAACE,OAAO,yCAAU;AAEtBF,IAAI,CAAC,SAAS,CAAC,GAAGA,IAAI;qBAEPA,IAAI","names":["_create","_handlebarsRuntime2","create","hb","compile","input","options","_handlebarsCompilerCompiler","precompile","AST","Compiler","JavaScriptCompiler","Parser","parse","parseWithoutProcessing","inst","_handlebarsNoConflict2","Visitor"],"sources":["../../lib/handlebars.js"],"sourcesContent":["import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n"]},"metadata":{},"sourceType":"script"}