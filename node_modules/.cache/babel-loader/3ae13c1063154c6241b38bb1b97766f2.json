{"ast":null,"code":"var inspect = require('util').inspect,\n  wrap = require('word-wrap'),\n  symbols = require('./cli-utils-symbols'),\n  cliUtils;\n\n// set styling for inspect options\ninspect.styles.string = 'grey';\ninspect.styles.name = 'white';\ncliUtils = {\n  /**\n   * A helper method that picks the right set of symbols for the given set of run conditions.\n   *\n   * @type {Function}\n   */\n  symbols: symbols,\n  /**\n   * A set of blank CLI table symbols (default).\n   *\n   * @type {Object}\n   */\n  cliTableTemplate_Blank: {\n    top: '',\n    'top-mid': '',\n    'top-left': '',\n    'top-right': '',\n    bottom: '',\n    'bottom-mid': '',\n    'bottom-left': '',\n    'bottom-right': '',\n    middle: '',\n    mid: ' ',\n    'mid-mid': '',\n    'mid-left': '',\n    'mid-right': '',\n    left: '',\n    'left-mid': '',\n    'left-left': '',\n    'left-right': '',\n    right: '',\n    'right-mid': '',\n    'right-left': '',\n    'right-right': ''\n  },\n  /**\n   * A set of fallback CLI table construction symbols, used when unicode has been disabled.\n   *\n   * @type {Object}\n   */\n  cliTableTemplateFallback: {\n    top: '-',\n    'top-mid': '-',\n    'top-left': '-',\n    'top-right': '-',\n    bottom: '-',\n    'bottom-mid': '-',\n    'bottom-left': '-',\n    'bottom-right': '-',\n    middle: '|',\n    mid: '-',\n    'mid-mid': '+',\n    'mid-left': '-',\n    'mid-right': '-',\n    left: '|',\n    'left-mid': '-',\n    'left-left': '-',\n    'left-right': '-',\n    right: '|',\n    'right-mid': '-',\n    'right-left': '-',\n    'right-right': '-'\n  },\n  /**\n   * A CLI utility helper method that perfoms left padding on an input string.\n   *\n   * @param {String} nr - The string to be padded.\n   * @param {Number} n - The length of the field, in which to left pad the input string.\n   * @param {String=} str - An optional string used for padding the input string. Defaults to '0'.\n   * @returns {String} - The resultant left padded string.\n   */\n  padLeft: function (nr, n, str) {\n    return Array(n - String(nr).length + 1).join(str || '0') + nr;\n  },\n  /**\n   * A CLI utility helper method that checks for the non TTY compliance of the current run environment.\n   *\n   * color:     |  noTTY:\n   * 'on'      -> false\n   * 'off'     -> true\n   * otherwise -> Based on isTTY.\n   *\n   * @param {String} color - A flag to indicate usage of the --color option.\n   * @returns {Boolean} - A boolean value depicting the result of the noTTY check.\n   */\n  noTTY: function (color) {\n    return color === 'off' || color !== 'on' && !process.stdout.isTTY;\n  },\n  /**\n   * A CLI utility helper method that generates a color inspector function for CLI reports.\n   *\n   * @param {Object} runOptions - The set of run options acquired via the runner.\n   * @returns {Function} - A function to perform utils.inspect, given a sample item, under pre-existing options.\n   */\n  inspector: function (runOptions) {\n    var dimension = cliUtils.dimension(),\n      options = {\n        depth: 25,\n        maxArrayLength: 100,\n        // only supported in Node v6.1.0 and up: https://github.com/nodejs/node/pull/6334\n\n        colors: !cliUtils.noTTY(runOptions.color),\n        // note that similar dimension calculation is in utils.wrapper\n        // only supported in Node v6.3.0 and above: https://github.com/nodejs/node/pull/7499\n        breakLength: (dimension.exists && dimension.width > 20 ? dimension.width : 60) - 16\n      };\n    return function (item) {\n      return inspect(item, options);\n    };\n  },\n  /**\n   * A CLI utility helper method to provide content wrapping functionality for CLI reports.\n   *\n   * @returns {Function} - A sub-method to wrap content, given a piece of text, and indent value.\n   */\n  wrapper: function () {\n    var dimension = cliUtils.dimension(),\n      // note that similar dimension calculation is in utils.wrapper\n      width = (dimension.exists && dimension.width > 20 ? dimension.width : 60) - 6;\n    return function (text, indent) {\n      return wrap(text, {\n        indent: indent,\n        width: width,\n        cut: true\n      });\n    };\n  },\n  /**\n   * A CLI utility helper method to compute and scae the size of the CLI table to be displayed.\n   *\n   * @returns {Object} - A set of properties: width, height, and TTY existence.\n   */\n  dimension: function () {\n    var tty, width, height;\n    try {\n      tty = require('tty');\n    } catch (e) {\n      tty = null;\n    }\n    if (tty && tty.isatty(1) && tty.isatty(2)) {\n      if (process.stdout.getWindowSize) {\n        width = process.stdout.getWindowSize(1)[0];\n        height = process.stdout.getWindowSize(1)[1];\n      } else if (tty.getWindowSize) {\n        width = tty.getWindowSize()[1];\n        height = tty.getWindowSize()[0];\n      } else if (process.stdout.columns && process.stdout.rows) {\n        height = process.stdout.rows;\n        width = process.stdout.columns;\n      }\n    }\n    return {\n      exists: !(Boolean(process.env.CI) || !process.stdout.isTTY),\n      // eslint-disable-line no-process-env\n      width: width,\n      height: height\n    };\n  }\n};\nmodule.exports = cliUtils;","map":{"version":3,"names":["inspect","require","wrap","symbols","cliUtils","styles","string","name","cliTableTemplate_Blank","top","bottom","middle","mid","left","right","cliTableTemplateFallback","padLeft","nr","n","str","Array","String","length","join","noTTY","color","process","stdout","isTTY","inspector","runOptions","dimension","options","depth","maxArrayLength","colors","breakLength","exists","width","item","wrapper","text","indent","cut","tty","height","e","isatty","getWindowSize","columns","rows","Boolean","env","CI","module","exports"],"sources":["/Users/Qusai.Qishta/node_modules/newman/lib/reporters/cli/cli-utils.js"],"sourcesContent":["var inspect = require('util').inspect,\n    wrap = require('word-wrap'),\n    symbols = require('./cli-utils-symbols'),\n\n    cliUtils;\n\n// set styling for inspect options\ninspect.styles.string = 'grey';\ninspect.styles.name = 'white';\n\ncliUtils = {\n\n    /**\n     * A helper method that picks the right set of symbols for the given set of run conditions.\n     *\n     * @type {Function}\n     */\n    symbols: symbols,\n\n    /**\n     * A set of blank CLI table symbols (default).\n     *\n     * @type {Object}\n     */\n    cliTableTemplate_Blank: {\n        top: '',\n        'top-mid': '',\n        'top-left': '',\n        'top-right': '',\n        bottom: '',\n        'bottom-mid': '',\n        'bottom-left': '',\n        'bottom-right': '',\n        middle: '',\n        mid: ' ',\n        'mid-mid': '',\n        'mid-left': '',\n        'mid-right': '',\n        left: '',\n        'left-mid': '',\n        'left-left': '',\n        'left-right': '',\n        right: '',\n        'right-mid': '',\n        'right-left': '',\n        'right-right': ''\n    },\n\n    /**\n     * A set of fallback CLI table construction symbols, used when unicode has been disabled.\n     *\n     * @type {Object}\n     */\n    cliTableTemplateFallback: {\n        top: '-',\n        'top-mid': '-',\n        'top-left': '-',\n        'top-right': '-',\n        bottom: '-',\n        'bottom-mid': '-',\n        'bottom-left': '-',\n        'bottom-right': '-',\n        middle: '|',\n        mid: '-',\n        'mid-mid': '+',\n        'mid-left': '-',\n        'mid-right': '-',\n        left: '|',\n        'left-mid': '-',\n        'left-left': '-',\n        'left-right': '-',\n        right: '|',\n        'right-mid': '-',\n        'right-left': '-',\n        'right-right': '-'\n    },\n\n    /**\n     * A CLI utility helper method that perfoms left padding on an input string.\n     *\n     * @param {String} nr - The string to be padded.\n     * @param {Number} n - The length of the field, in which to left pad the input string.\n     * @param {String=} str - An optional string used for padding the input string. Defaults to '0'.\n     * @returns {String} - The resultant left padded string.\n     */\n    padLeft: function (nr, n, str) {\n        return Array(n - String(nr).length + 1).join(str || '0') + nr;\n    },\n\n    /**\n     * A CLI utility helper method that checks for the non TTY compliance of the current run environment.\n     *\n     * color:     |  noTTY:\n     * 'on'      -> false\n     * 'off'     -> true\n     * otherwise -> Based on isTTY.\n     *\n     * @param {String} color - A flag to indicate usage of the --color option.\n     * @returns {Boolean} - A boolean value depicting the result of the noTTY check.\n     */\n    noTTY: function (color) {\n        return (color === 'off') || (color !== 'on') && (!process.stdout.isTTY);\n    },\n\n    /**\n     * A CLI utility helper method that generates a color inspector function for CLI reports.\n     *\n     * @param {Object} runOptions - The set of run options acquired via the runner.\n     * @returns {Function} - A function to perform utils.inspect, given a sample item, under pre-existing options.\n     */\n    inspector: function (runOptions) {\n        var dimension = cliUtils.dimension(),\n            options = {\n                depth: 25,\n\n                maxArrayLength: 100, // only supported in Node v6.1.0 and up: https://github.com/nodejs/node/pull/6334\n\n                colors: !cliUtils.noTTY(runOptions.color),\n\n                // note that similar dimension calculation is in utils.wrapper\n                // only supported in Node v6.3.0 and above: https://github.com/nodejs/node/pull/7499\n                breakLength: ((dimension.exists && (dimension.width > 20)) ? dimension.width : 60) - 16\n            };\n\n        return function (item) {\n            return inspect(item, options);\n        };\n    },\n\n    /**\n     * A CLI utility helper method to provide content wrapping functionality for CLI reports.\n     *\n     * @returns {Function} - A sub-method to wrap content, given a piece of text, and indent value.\n     */\n    wrapper: function () {\n        var dimension = cliUtils.dimension(),\n            // note that similar dimension calculation is in utils.wrapper\n            width = ((dimension.exists && (dimension.width > 20)) ? dimension.width : 60) - 6;\n\n        return function (text, indent) {\n            return wrap(text, {\n                indent: indent,\n                width: width,\n                cut: true\n            });\n        };\n    },\n\n    /**\n     * A CLI utility helper method to compute and scae the size of the CLI table to be displayed.\n     *\n     * @returns {Object} - A set of properties: width, height, and TTY existence.\n     */\n    dimension: function () {\n        var tty,\n            width,\n            height;\n\n        try { tty = require('tty'); }\n        catch (e) { tty = null; }\n\n        if (tty && tty.isatty(1) && tty.isatty(2)) {\n            if (process.stdout.getWindowSize) {\n                width = process.stdout.getWindowSize(1)[0];\n                height = process.stdout.getWindowSize(1)[1];\n            }\n            else if (tty.getWindowSize) {\n                width = tty.getWindowSize()[1];\n                height = tty.getWindowSize()[0];\n            }\n            else if (process.stdout.columns && process.stdout.rows) {\n                height = process.stdout.rows;\n                width = process.stdout.columns;\n            }\n        }\n\n        return {\n            exists: !(Boolean(process.env.CI) || !process.stdout.isTTY), // eslint-disable-line no-process-env\n            width: width,\n            height: height\n        };\n    }\n};\n\nmodule.exports = cliUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}