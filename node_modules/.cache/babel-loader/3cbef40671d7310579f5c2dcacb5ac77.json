{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\nvar _utils = require('./utils');\nvar Utils = _interopRequireWildcard(_utils);\nvar _exception = require('./exception');\nvar _exception2 = _interopRequireDefault(_exception);\nvar _base = require('./base');\nvar _helpers = require('./helpers');\nvar _internalWrapHelper = require('./internal/wrapHelper');\nvar _internalProtoAccess = require('./internal/proto-access');\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n    currentRevision = _base.COMPILER_REVISION;\n  if (compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= _base.COMPILER_REVISION) {\n    return;\n  }\n  if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {\n    var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n      compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n    throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n  }\n}\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _exception2['default']('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n    var extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n    var result = env.VM.invokePartial.call(this, partial, context, extendedOptions);\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  var container = {\n    strict: function strict(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function lookupProperty(parent, propertyName) {\n      var result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n      if (_internalProtoAccess.resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n      for (var i = 0; i < len; i++) {\n        var result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n    fn: function fn(i) {\n      var ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function mergeIfNeeded(param, common) {\n      var obj = param || common;\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n  function ret(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var data = options.data;\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    var depths = undefined,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n    function main(context /*, options*/) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n  ret.isTop = true;\n  ret._setup = function (options) {\n    if (!options.partial) {\n      var mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(options.partials, env.partials);\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend({}, env.decorators, options.decorators);\n      }\n      container.hooks = {};\n      container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(options);\n      var keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n      _helpers.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      _helpers.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _exception2['default']('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new _exception2['default']('must pass parent depths');\n    }\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var currentDepths = depths;\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n  }\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\nfunction invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  var currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n  var partialBlock = undefined;\n  if (options.fn && options.fn !== noop) {\n    (function () {\n      options.data = _base.createFrame(options.data);\n      // Wrapper function to get access to currentPartialBlock from the closure\n      var fn = options.fn;\n      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        // Restore the partial-block from the closure for the execution of the block\n        // i.e. the part inside the block of the partial call.\n        options.data = _base.createFrame(options.data);\n        options.data['partial-block'] = currentPartialBlock;\n        return fn(context, options);\n      };\n      if (fn.partials) {\n        options.partials = Utils.extend({}, options.partials, fn.partials);\n      }\n    })();\n  }\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n  if (partial === undefined) {\n    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\nfunction noop() {\n  return '';\n}\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _base.createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    var props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(function (helperName) {\n    var helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\nfunction passLookupPropertyOption(helper, container) {\n  var lookupProperty = container.lookupProperty;\n  return _internalWrapHelper.wrapHelper(helper, function (options) {\n    return Utils.extend({\n      lookupProperty: lookupProperty\n    }, options);\n  });\n}","map":{"version":3,"mappings":"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","names":["Utils","checkRevision","compilerInfo","compilerRevision","currentRevision","runtimeVersions","_base","compilerVersions","template","templateSpec","env","main","decorator","main_d","VM","compiler","templateWasPrecompiledWithCompilerV7","invokePartialWrapper","partial","context","options","hash","extend","ids","resolvePartial","call","extendedOptions","hooks","protoAccessControl","result","invokePartial","compile","partials","name","compilerOptions","indent","lines","split","i","l","length","join","container","strict","obj","loc","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","_internalProtoAccess","undefined","lookup","depths","len","lambda","current","escapeExpression","fn","ret","programs","program","data","declaredBlockParams","blockParams","programWrapper","wrapProgram","value","depth","_parent","mergeIfNeeded","param","common","nullContext","seal","noop","_setup","useData","initData","useBlockParams","useDepths","concat","helpers","executeDecorators","isTop","mergedHelpers","wrapHelpersToPassLookupProperty","usePartial","useDecorators","decorators","keepHelperInHelpers","allowCallsToHelperMissing","_helpers","_child","prog","currentDepths","currentPartialBlock","contextPath","partialBlock","partialBlockWrapper","Function","root","props","keys","forEach","helper","helperName","passLookupPropertyOption","_internalWrapHelper"],"sources":["../../../lib/handlebars/runtime.js"],"sourcesContent":["import * as Utils from './utils';\nimport Exception from './exception';\nimport {\n  COMPILER_REVISION,\n  createFrame,\n  LAST_COMPATIBLE_COMPILER_REVISION,\n  REVISION_CHANGES\n} from './base';\nimport { moveHelperToHooks } from './helpers';\nimport { wrapHelper } from './internal/wrapHelper';\nimport {\n  createProtoAccessControl,\n  resultIsAllowed\n} from './internal/proto-access';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = (compilerInfo && compilerInfo[0]) || 1,\n    currentRevision = COMPILER_REVISION;\n\n  if (\n    compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION &&\n    compilerRevision <= COMPILER_REVISION\n  ) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n      compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception(\n      'Template was precompiled with an older version of Handlebars than the current runtime. ' +\n        'Please update your precompiler to a newer version (' +\n        runtimeVersions +\n        ') or downgrade your runtime to an older version (' +\n        compilerVersions +\n        ').'\n    );\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception(\n      'Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n        'Please update your runtime to a newer version (' +\n        compilerInfo[1] +\n        ').'\n    );\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 =\n    templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    let result = env.VM.invokePartial.call(\n      this,\n      partial,\n      context,\n      extendedOptions\n    );\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(\n        partial,\n        templateSpec.compilerOptions,\n        env\n      );\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception(\n        'The partial ' +\n          options.name +\n          ' could not be compiled when running in runtime-only mode'\n      );\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function(parent, propertyName) {\n      let result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        let result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(\n          this,\n          i,\n          fn,\n          data,\n          declaredBlockParams,\n          blockParams,\n          depths\n        );\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths =\n          context != options.depths[0]\n            ? [context].concat(options.depths)\n            : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return (\n        '' +\n        templateSpec.main(\n          container,\n          context,\n          container.helpers,\n          container.partials,\n          data,\n          blockParams,\n          depths\n        )\n      );\n    }\n\n    main = executeDecorators(\n      templateSpec.main,\n      main,\n      container,\n      options.depths || [],\n      data,\n      blockParams\n    );\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(\n          options.partials,\n          env.partials\n        );\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend(\n          {},\n          env.decorators,\n          options.decorators\n        );\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = createProtoAccessControl(options);\n\n      let keepHelperInHelpers =\n        options.allowCallsToHelperMissing ||\n        templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(\n      container,\n      i,\n      templateSpec[i],\n      data,\n      0,\n      blockParams,\n      depths\n    );\n  };\n  return ret;\n}\n\nexport function wrapProgram(\n  container,\n  i,\n  fn,\n  data,\n  declaredBlockParams,\n  blockParams,\n  depths\n) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (\n      depths &&\n      context != depths[0] &&\n      !(context === container.nullContext && depths[0] === null)\n    ) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(\n      container,\n      context,\n      container.helpers,\n      container.partials,\n      options.data || data,\n      blockParams && [options.blockParams].concat(blockParams),\n      currentDepths\n    );\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(\n      context,\n      options = {}\n    ) {\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(\n      prog,\n      props,\n      container,\n      depths && depths[0],\n      data,\n      blockParams,\n      depths\n    );\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(helperName => {\n    let helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  const lookupProperty = container.lookupProperty;\n  return wrapHelper(helper, options => {\n    return Utils.extend({ lookupProperty }, options);\n  });\n}\n"]},"metadata":{},"sourceType":"script"}