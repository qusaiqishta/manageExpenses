{"ast":null,"code":"var _ = require('../util').lodash,\n  Property = require('./property').Property,\n  Url = require('./url').Url,\n  Script,\n  SCRIPT_NEWLINE_PATTERN = /\\r?\\n/g;\n_.inherit(\n/**\n * Postman scripts that are executed upon events on a collection  / request such as test and pre request.\n *\n * @constructor\n * @extends {Property}\n *\n * @param {Object} options -\n */\nScript = function PostmanScript(options) {\n  // this constructor is intended to inherit and as such the super constructor is required to be executed\n  Script.super_.apply(this, arguments);\n  options && this.update(options);\n}, Property);\n_.assign(Script.prototype, /** @lends Script.prototype */{\n  /**\n   * Defines whether this property instances requires an id\n   *\n   * @private\n   * @readOnly\n   * @type {Boolean}\n   */\n  _postman_propertyRequiresId: true,\n  /**\n   * Converts the script lines array to a single source string.\n   *\n   * @returns {String}\n   */\n  toSource: function () {\n    return this.exec ? this.exec.join('\\n') : undefined;\n  },\n  /**\n   * Updates the properties of a Script.\n   *\n   * @param {Object} [options] -\n   * @param {String} [options.type] Script type\n   * @param {String} [options.src] Script source url\n   * @param {String[]|String} [options.exec] Script to execute\n   */\n  update: function (options) {\n    // no splitting is being done here, as string scripts are split right before assignment below anyway\n    (_.isString(options) || _.isArray(options)) && (options = {\n      exec: options\n    });\n    if (!options) {\n      return;\n    } // in case definition object is missing, there is no point moving forward\n\n    // create the request property\n    /**\n     * @augments {Script.prototype}\n     * @type {string}\n     */\n    this.type = options.type || 'text/javascript';\n    _.has(options, 'src') && (\n    /**\n     * @augments {Script.prototype}\n     * @type {Url}\n     */\n    this.src = new Url(options.src));\n    if (!this.src && _.has(options, 'exec')) {\n      /**\n       * @augments {Script.prototype}\n       * @type {Array<string>}\n       */\n      this.exec = _.isString(options.exec) ? options.exec.split(SCRIPT_NEWLINE_PATTERN) : _.isArray(options.exec) ? options.exec : undefined;\n    }\n  }\n});\n_.assign(Script, /** @lends Script */{\n  /**\n   * Defines the name of this property for internal use.\n   *\n   * @private\n   * @readOnly\n   * @type {String}\n   */\n  _postman_propertyName: 'Script',\n  /**\n   * Check whether an object is an instance of {@link ItemGroup}.\n   *\n   * @param {*} obj -\n   * @returns {Boolean}\n   */\n  isScript: function (obj) {\n    return Boolean(obj) && (obj instanceof Script || _.inSuperChain(obj.constructor, '_postman_propertyName', Script._postman_propertyName));\n  }\n});\nmodule.exports = {\n  Script\n};","map":{"version":3,"names":["_","require","lodash","Property","Url","Script","SCRIPT_NEWLINE_PATTERN","inherit","PostmanScript","options","super_","apply","arguments","update","assign","prototype","_postman_propertyRequiresId","toSource","exec","join","undefined","isString","isArray","type","has","src","split","_postman_propertyName","isScript","obj","Boolean","inSuperChain","constructor","module","exports"],"sources":["/Users/Qusai.Qishta/node_modules/postman-collection/lib/collection/script.js"],"sourcesContent":["var _ = require('../util').lodash,\n    Property = require('./property').Property,\n    Url = require('./url').Url,\n\n    Script,\n\n    SCRIPT_NEWLINE_PATTERN = /\\r?\\n/g;\n\n_.inherit((\n\n    /**\n     * Postman scripts that are executed upon events on a collection  / request such as test and pre request.\n     *\n     * @constructor\n     * @extends {Property}\n     *\n     * @param {Object} options -\n     */\n    Script = function PostmanScript (options) {\n        // this constructor is intended to inherit and as such the super constructor is required to be executed\n        Script.super_.apply(this, arguments);\n\n        options && this.update(options);\n    }), Property);\n\n_.assign(Script.prototype, /** @lends Script.prototype */ {\n    /**\n     * Defines whether this property instances requires an id\n     *\n     * @private\n     * @readOnly\n     * @type {Boolean}\n     */\n    _postman_propertyRequiresId: true,\n\n    /**\n     * Converts the script lines array to a single source string.\n     *\n     * @returns {String}\n     */\n    toSource: function () {\n        return this.exec ? this.exec.join('\\n') : undefined;\n    },\n\n    /**\n     * Updates the properties of a Script.\n     *\n     * @param {Object} [options] -\n     * @param {String} [options.type] Script type\n     * @param {String} [options.src] Script source url\n     * @param {String[]|String} [options.exec] Script to execute\n     */\n    update: function (options) {\n        // no splitting is being done here, as string scripts are split right before assignment below anyway\n        (_.isString(options) || _.isArray(options)) && (options = { exec: options });\n\n        if (!options) { return; } // in case definition object is missing, there is no point moving forward\n\n        // create the request property\n        /**\n         * @augments {Script.prototype}\n         * @type {string}\n         */\n        this.type = options.type || 'text/javascript';\n        _.has(options, 'src') && (\n\n            /**\n             * @augments {Script.prototype}\n             * @type {Url}\n             */\n            this.src = new Url(options.src)\n        );\n\n        if (!this.src && _.has(options, 'exec')) {\n            /**\n             * @augments {Script.prototype}\n             * @type {Array<string>}\n             */\n            this.exec = _.isString(options.exec) ? options.exec.split(SCRIPT_NEWLINE_PATTERN) :\n                _.isArray(options.exec) ? options.exec : undefined;\n        }\n    }\n});\n\n_.assign(Script, /** @lends Script */ {\n    /**\n     * Defines the name of this property for internal use.\n     *\n     * @private\n     * @readOnly\n     * @type {String}\n     */\n    _postman_propertyName: 'Script',\n\n    /**\n     * Check whether an object is an instance of {@link ItemGroup}.\n     *\n     * @param {*} obj -\n     * @returns {Boolean}\n     */\n    isScript: function (obj) {\n        return Boolean(obj) && ((obj instanceof Script) ||\n            _.inSuperChain(obj.constructor, '_postman_propertyName', Script._postman_propertyName));\n    }\n});\n\nmodule.exports = {\n    Script\n};\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC,CAACC,MAAM;EAC7BC,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC,CAACE,QAAQ;EACzCC,GAAG,GAAGH,OAAO,CAAC,OAAO,CAAC,CAACG,GAAG;EAE1BC,MAAM;EAENC,sBAAsB,GAAG,QAAQ;AAErCN,CAAC,CAACO,OAAO;AAEL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIF,MAAM,GAAG,SAASG,aAAa,CAAEC,OAAO,EAAE;EACtC;EACAJ,MAAM,CAACK,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAEpCH,OAAO,IAAI,IAAI,CAACI,MAAM,CAACJ,OAAO,CAAC;AACnC,CAAC,EAAGN,QAAQ,CAAC;AAEjBH,CAAC,CAACc,MAAM,CAACT,MAAM,CAACU,SAAS,EAAE,8BAA+B;EACtD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,2BAA2B,EAAE,IAAI;EAEjC;AACJ;AACA;AACA;AACA;EACIC,QAAQ,EAAE,YAAY;IAClB,OAAO,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,GAAGC,SAAS;EACvD,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIP,MAAM,EAAE,UAAUJ,OAAO,EAAE;IACvB;IACA,CAACT,CAAC,CAACqB,QAAQ,CAACZ,OAAO,CAAC,IAAIT,CAAC,CAACsB,OAAO,CAACb,OAAO,CAAC,MAAMA,OAAO,GAAG;MAAES,IAAI,EAAET;IAAQ,CAAC,CAAC;IAE5E,IAAI,CAACA,OAAO,EAAE;MAAE;IAAQ,CAAC,CAAC;;IAE1B;IACA;AACR;AACA;AACA;IACQ,IAAI,CAACc,IAAI,GAAGd,OAAO,CAACc,IAAI,IAAI,iBAAiB;IAC7CvB,CAAC,CAACwB,GAAG,CAACf,OAAO,EAAE,KAAK,CAAC;IAEjB;AACZ;AACA;AACA;IACY,IAAI,CAACgB,GAAG,GAAG,IAAIrB,GAAG,CAACK,OAAO,CAACgB,GAAG,CAAC,CAClC;IAED,IAAI,CAAC,IAAI,CAACA,GAAG,IAAIzB,CAAC,CAACwB,GAAG,CAACf,OAAO,EAAE,MAAM,CAAC,EAAE;MACrC;AACZ;AACA;AACA;MACY,IAAI,CAACS,IAAI,GAAGlB,CAAC,CAACqB,QAAQ,CAACZ,OAAO,CAACS,IAAI,CAAC,GAAGT,OAAO,CAACS,IAAI,CAACQ,KAAK,CAACpB,sBAAsB,CAAC,GAC7EN,CAAC,CAACsB,OAAO,CAACb,OAAO,CAACS,IAAI,CAAC,GAAGT,OAAO,CAACS,IAAI,GAAGE,SAAS;IAC1D;EACJ;AACJ,CAAC,CAAC;AAEFpB,CAAC,CAACc,MAAM,CAACT,MAAM,EAAE,oBAAqB;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;EACIsB,qBAAqB,EAAE,QAAQ;EAE/B;AACJ;AACA;AACA;AACA;AACA;EACIC,QAAQ,EAAE,UAAUC,GAAG,EAAE;IACrB,OAAOC,OAAO,CAACD,GAAG,CAAC,KAAMA,GAAG,YAAYxB,MAAM,IAC1CL,CAAC,CAAC+B,YAAY,CAACF,GAAG,CAACG,WAAW,EAAE,uBAAuB,EAAE3B,MAAM,CAACsB,qBAAqB,CAAC,CAAC;EAC/F;AACJ,CAAC,CAAC;AAEFM,MAAM,CAACC,OAAO,GAAG;EACb7B;AACJ,CAAC"},"metadata":{},"sourceType":"script"}