{"ast":null,"code":"const utils = require('./utils');\nconst tableLayout = require('./layout-manager');\nclass Table extends Array {\n  constructor(options) {\n    super();\n    this.options = utils.mergeOptions(options);\n  }\n  toString() {\n    let array = this;\n    let headersPresent = this.options.head && this.options.head.length;\n    if (headersPresent) {\n      array = [this.options.head];\n      if (this.length) {\n        array.push.apply(array, this);\n      }\n    } else {\n      this.options.style.head = [];\n    }\n    let cells = tableLayout.makeTableLayout(array);\n    cells.forEach(function (row) {\n      row.forEach(function (cell) {\n        cell.mergeTableOptions(this.options, cells);\n      }, this);\n    }, this);\n    tableLayout.computeWidths(this.options.colWidths, cells);\n    tableLayout.computeHeights(this.options.rowHeights, cells);\n    cells.forEach(function (row) {\n      row.forEach(function (cell) {\n        cell.init(this.options);\n      }, this);\n    }, this);\n    let result = [];\n    for (let rowIndex = 0; rowIndex < cells.length; rowIndex++) {\n      let row = cells[rowIndex];\n      let heightOfRow = this.options.rowHeights[rowIndex];\n      if (rowIndex === 0 || !this.options.style.compact || rowIndex == 1 && headersPresent) {\n        doDraw(row, 'top', result);\n      }\n      for (let lineNum = 0; lineNum < heightOfRow; lineNum++) {\n        doDraw(row, lineNum, result);\n      }\n      if (rowIndex + 1 == cells.length) {\n        doDraw(row, 'bottom', result);\n      }\n    }\n    return result.join('\\n');\n  }\n  get width() {\n    let str = this.toString().split('\\n');\n    return str[0].length;\n  }\n}\nfunction doDraw(row, lineNum, result) {\n  let line = [];\n  row.forEach(function (cell) {\n    line.push(cell.draw(lineNum));\n  });\n  let str = line.join('');\n  if (str.length) result.push(str);\n}\nmodule.exports = Table;","map":{"version":3,"names":["utils","require","tableLayout","Table","Array","constructor","options","mergeOptions","toString","array","headersPresent","head","length","push","apply","style","cells","makeTableLayout","forEach","row","cell","mergeTableOptions","computeWidths","colWidths","computeHeights","rowHeights","init","result","rowIndex","heightOfRow","compact","doDraw","lineNum","join","width","str","split","line","draw","module","exports"],"sources":["/Users/Qusai.Qishta/node_modules/cli-table3/src/table.js"],"sourcesContent":["const utils = require('./utils');\nconst tableLayout = require('./layout-manager');\n\nclass Table extends Array {\n  constructor(options) {\n    super();\n\n    this.options = utils.mergeOptions(options);\n  }\n\n  toString() {\n    let array = this;\n    let headersPresent = this.options.head && this.options.head.length;\n    if (headersPresent) {\n      array = [this.options.head];\n      if (this.length) {\n        array.push.apply(array, this);\n      }\n    } else {\n      this.options.style.head = [];\n    }\n\n    let cells = tableLayout.makeTableLayout(array);\n\n    cells.forEach(function (row) {\n      row.forEach(function (cell) {\n        cell.mergeTableOptions(this.options, cells);\n      }, this);\n    }, this);\n\n    tableLayout.computeWidths(this.options.colWidths, cells);\n    tableLayout.computeHeights(this.options.rowHeights, cells);\n\n    cells.forEach(function (row) {\n      row.forEach(function (cell) {\n        cell.init(this.options);\n      }, this);\n    }, this);\n\n    let result = [];\n\n    for (let rowIndex = 0; rowIndex < cells.length; rowIndex++) {\n      let row = cells[rowIndex];\n      let heightOfRow = this.options.rowHeights[rowIndex];\n\n      if (rowIndex === 0 || !this.options.style.compact || (rowIndex == 1 && headersPresent)) {\n        doDraw(row, 'top', result);\n      }\n\n      for (let lineNum = 0; lineNum < heightOfRow; lineNum++) {\n        doDraw(row, lineNum, result);\n      }\n\n      if (rowIndex + 1 == cells.length) {\n        doDraw(row, 'bottom', result);\n      }\n    }\n\n    return result.join('\\n');\n  }\n\n  get width() {\n    let str = this.toString().split('\\n');\n    return str[0].length;\n  }\n}\n\nfunction doDraw(row, lineNum, result) {\n  let line = [];\n  row.forEach(function (cell) {\n    line.push(cell.draw(lineNum));\n  });\n  let str = line.join('');\n  if (str.length) result.push(str);\n}\n\nmodule.exports = Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}