{"ast":null,"code":"/* istanbul ignore file */\n// @todo\n// 1. Return with annotations like (overridden headers, auth headers etc.)\n// 2. Utilize requester (core.js) methods for dryRun\n// 3. Add tests\nconst _ = require('lodash'),\n  async = require('async'),\n  mime = require('mime-types'),\n  urlEncoder = require('postman-url-encoder'),\n  Request = require('postman-collection').Request,\n  authorizeRequest = require('../authorizer').authorizeRequest,\n  authHandlers = require('../authorizer').AuthLoader.handlers,\n  version = require('../../package.json').version,\n  CALCULATED_AT_RUNTIME = '<calculated when request is sent>',\n  COOKIE = 'Cookie',\n  FUNCTION = 'function',\n  CONTENT_TYPE = 'Content-Type',\n  DEFAULT_MIME_TYPE = 'application/octet-stream',\n  CONTENT_TYPE_URLENCODED = 'application/x-www-form-urlencoded',\n  CONTENT_TYPE_FORMDATA = 'multipart/form-data; boundary=' + CALCULATED_AT_RUNTIME,\n  CONTENT_TYPE_LANGUAGE = {\n    html: 'text/html',\n    text: 'text/plain',\n    json: 'application/json',\n    javascript: 'application/javascript',\n    xml: 'application/xml'\n  },\n  BODY_MODE = {\n    raw: 'raw',\n    file: 'file',\n    graphql: 'graphql',\n    formdata: 'formdata',\n    urlencoded: 'urlencoded'\n  };\n\n/**\n * Check if request body is empty and also handles disabled params for urlencoded\n * and formdata bodies.\n *\n * @todo Update Collection SDK isEmpty method to account for this.\n *\n * @private\n * @param {RequestBody} body -\n * @returns {Boolean}\n */\nfunction bodyIsEmpty(body) {\n  if (!body || body.disabled || body.isEmpty()) {\n    return true;\n  }\n  var i,\n    param,\n    mode = body.mode;\n  if (!(mode === BODY_MODE.formdata || mode === BODY_MODE.urlencoded)) {\n    return false;\n  }\n  for (i = body[mode].members.length - 1; i >= 0; i--) {\n    param = body[mode].members[i];\n    // bail out if a single enabled param is present\n    if (param && !param.disabled) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Add new System header.\n *\n * @param {object} headers -\n * @param {String} key -\n * @param {String} value -\n */\nfunction addSystemHeader(headers, key, value) {\n  headers.add({\n    key: key,\n    value: value,\n    system: true\n  });\n}\n\n/**\n * Authorize the given request.\n *\n * @private\n * @param {Request} request -\n * @param {Function} callback -\n */\nfunction setAuthorization(request, callback) {\n  authorizeRequest(request, function (err, clonedRequest) {\n    // @note authorizeRequest returns a cloned request.\n    !clonedRequest && (clonedRequest = new Request(request.toJSON()));\n    if (err) {\n      return callback(null, clonedRequest);\n    }\n    var auth = request.auth,\n      authType = auth && auth.type,\n      manifest = _.get(authHandlers, [authType, 'manifest']),\n      headers = _.get(clonedRequest, 'headers.reference') || {},\n      queryParams = _.get(clonedRequest, 'url.query.reference') || {},\n      bodyParams = _.get(clonedRequest, 'body.urlencoded.reference') || {},\n      propertyList,\n      propertyKey,\n      property;\n    if (authType === 'apikey' && (auth = auth.apikey)) {\n      propertyKey = String(auth.get('key')).toLowerCase();\n      propertyList = auth.get('in') === 'query' ? queryParams : headers;\n      if (property = propertyList[propertyKey]) {\n        Array.isArray(property) && (property = property[property.length - 1]);\n        property.auth = true;\n      }\n      return callback(null, clonedRequest);\n    }\n    if (!(manifest && manifest.updates)) {\n      return callback(null, clonedRequest);\n    }\n    manifest.updates.forEach(function (update) {\n      propertyKey = update.property;\n      switch (update.type) {\n        case 'header':\n          propertyKey = propertyKey.toLowerCase();\n          propertyList = headers;\n          break;\n        case 'url.param':\n          propertyList = queryParams;\n          break;\n        case 'body.urlencoded':\n          propertyList = bodyParams;\n          break;\n        default:\n          return;\n      }\n      if (property = propertyList[propertyKey]) {\n        Array.isArray(property) && (property = property[property.length - 1]);\n        property.auth = true;\n      }\n    });\n    callback(null, clonedRequest);\n  });\n}\n\n/**\n * Adds Content-Type header based on selected request body.\n *\n * @private\n * @param {Request} request -\n * @param {Function} callback -\n */\nfunction setContentType(request, callback) {\n  // bail out if body is empty\n  if (bodyIsEmpty(request.body)) {\n    return callback(null, request);\n  }\n  var headers = request.headers,\n    contentLanguage;\n  switch (request.body.mode) {\n    case BODY_MODE.raw:\n      contentLanguage = _.get(request, 'body.options.raw.language', 'text');\n      addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_LANGUAGE[contentLanguage] || CONTENT_TYPE_LANGUAGE.text);\n      break;\n    case BODY_MODE.urlencoded:\n      addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_URLENCODED);\n      break;\n    case BODY_MODE.formdata:\n      addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_FORMDATA);\n      break;\n    case BODY_MODE.graphql:\n      addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_LANGUAGE.json);\n      break;\n    case BODY_MODE.file:\n      addSystemHeader(headers, CONTENT_TYPE, mime.lookup(request.body.file && request.body.file.src) || DEFAULT_MIME_TYPE);\n      break;\n    default:\n      break;\n  }\n  addSystemHeader(headers, 'Content-Length', CALCULATED_AT_RUNTIME);\n  callback(null, request);\n}\n\n/**\n * Adds Cookie header for the given request url.\n *\n * @private\n * @param {Request} request -\n * @param {Object} cookieJar -\n * @param {Function} callback -\n */\nfunction setCookie(request, cookieJar, callback) {\n  // bail out if not a valid instance of CookieJar\n  if (!(cookieJar && cookieJar.getCookieString)) {\n    return callback(null, request);\n  }\n\n  // @note don't pass request.url instance to force re-parsing of the URL\n  cookieJar.getCookieString(urlEncoder.toNodeUrl(request.url.toString()), function (err, cookies) {\n    if (err) {\n      return callback(null, request);\n    }\n    if (cookies && cookies.length) {\n      addSystemHeader(request.headers, COOKIE, cookies);\n    }\n    callback(null, request);\n  });\n}\n\n/**\n * A helper method to dry run the given request instance.\n * It returns the cloned request instance with the system added properties.\n *\n * @param {Request} request -\n * @param {Object} options -\n * @param {Object} options.cookieJar -\n * @param {Object} options.protocolProfileBehavior -\n * @param {Function} done -\n */\nfunction dryRun(request, options, done) {\n  if (!done && typeof options === FUNCTION) {\n    done = options;\n    options = {};\n  }\n  if (!Request.isRequest(request)) {\n    return done(new Error('Invalid Request instance'));\n  }\n  !options && (options = {});\n  var cookieJar = options.cookieJar,\n    implicitCacheControl = options.implicitCacheControl,\n    implicitTraceHeader = options.implicitTraceHeader,\n    disabledSystemHeaders = _.get(options.protocolProfileBehavior, 'disabledSystemHeaders') || {},\n    disableCookies = _.get(options.protocolProfileBehavior, 'disableCookies');\n  async.waterfall([function setAuthorizationHeaders(next) {\n    setAuthorization(request, next);\n  }, function setContentTypeHeader(request, next) {\n    setContentType(request, next);\n  }, function setContentLength(request, next) {\n    var headers = request.headers,\n      header = headers.one('content-length');\n\n    // bail out if header added by body helper\n    if (header && header.system) {\n      return next(null, request);\n    }\n    switch (String(request.method).toUpperCase()) {\n      case 'GET':\n      case 'HEAD':\n      case 'TRACE':\n      case 'DELETE':\n      case 'CONNECT':\n      case 'OPTIONS':\n        break;\n      default:\n        addSystemHeader(headers, 'Content-Length', '0');\n        break;\n    }\n    next(null, request);\n  }, function setCookieHeader(request, next) {\n    if (disableCookies || !cookieJar) {\n      return next(null, request);\n    }\n    setCookie(request, cookieJar, next);\n  }, function setStaticHeaders(request, next) {\n    var headers = request.headers;\n\n    // remove header added by auth helpers\n    headers.remove(function (header) {\n      return header.system && header.key.toLowerCase() === 'host';\n    });\n    addSystemHeader(headers, 'User-Agent', 'PostmanRuntime/' + version);\n    addSystemHeader(headers, 'Accept', '*/*');\n    addSystemHeader(headers, 'Accept-Encoding', 'gzip, deflate, br');\n    addSystemHeader(headers, 'Host', CALCULATED_AT_RUNTIME);\n    addSystemHeader(headers, 'Connection', 'keep-alive');\n    implicitCacheControl && addSystemHeader(headers, 'Cache-Control', 'no-cache');\n    implicitTraceHeader && addSystemHeader(headers, 'Postman-Token', CALCULATED_AT_RUNTIME);\n    next(null, request);\n  }, function disableSystemHeaders(request, next) {\n    var headersReference = request.headers.reference,\n      header;\n    _.forEach(disabledSystemHeaders, function (disabled, headerKey) {\n      if (!disabled) {\n        return;\n      }\n      if (header = headersReference[headerKey.toLowerCase()]) {\n        Array.isArray(header) && (header = header[header.length - 1]);\n        header.system && (header.disabled = true);\n      }\n    });\n    next(null, request);\n  }], function (err, request) {\n    if (err) {\n      return done(err);\n    }\n    done(null, request);\n  });\n}\nmodule.exports = dryRun;","map":{"version":3,"names":["_","require","async","mime","urlEncoder","Request","authorizeRequest","authHandlers","AuthLoader","handlers","version","CALCULATED_AT_RUNTIME","COOKIE","FUNCTION","CONTENT_TYPE","DEFAULT_MIME_TYPE","CONTENT_TYPE_URLENCODED","CONTENT_TYPE_FORMDATA","CONTENT_TYPE_LANGUAGE","html","text","json","javascript","xml","BODY_MODE","raw","file","graphql","formdata","urlencoded","bodyIsEmpty","body","disabled","isEmpty","i","param","mode","members","length","addSystemHeader","headers","key","value","add","system","setAuthorization","request","callback","err","clonedRequest","toJSON","auth","authType","type","manifest","get","queryParams","bodyParams","propertyList","propertyKey","property","apikey","String","toLowerCase","Array","isArray","updates","forEach","update","setContentType","contentLanguage","lookup","src","setCookie","cookieJar","getCookieString","toNodeUrl","url","toString","cookies","dryRun","options","done","isRequest","Error","implicitCacheControl","implicitTraceHeader","disabledSystemHeaders","protocolProfileBehavior","disableCookies","waterfall","setAuthorizationHeaders","next","setContentTypeHeader","setContentLength","header","one","method","toUpperCase","setCookieHeader","setStaticHeaders","remove","disableSystemHeaders","headersReference","reference","headerKey","module","exports"],"sources":["/Users/Qusai.Qishta/node_modules/postman-runtime/lib/requester/dry-run.js"],"sourcesContent":["/* istanbul ignore file */\n// @todo\n// 1. Return with annotations like (overridden headers, auth headers etc.)\n// 2. Utilize requester (core.js) methods for dryRun\n// 3. Add tests\nconst _ = require('lodash'),\n    async = require('async'),\n    mime = require('mime-types'),\n    urlEncoder = require('postman-url-encoder'),\n    Request = require('postman-collection').Request,\n    authorizeRequest = require('../authorizer').authorizeRequest,\n    authHandlers = require('../authorizer').AuthLoader.handlers,\n    version = require('../../package.json').version,\n\n    CALCULATED_AT_RUNTIME = '<calculated when request is sent>',\n    COOKIE = 'Cookie',\n    FUNCTION = 'function',\n    CONTENT_TYPE = 'Content-Type',\n    DEFAULT_MIME_TYPE = 'application/octet-stream',\n    CONTENT_TYPE_URLENCODED = 'application/x-www-form-urlencoded',\n    CONTENT_TYPE_FORMDATA = 'multipart/form-data; boundary=' + CALCULATED_AT_RUNTIME,\n\n    CONTENT_TYPE_LANGUAGE = {\n        html: 'text/html',\n        text: 'text/plain',\n        json: 'application/json',\n        javascript: 'application/javascript',\n        xml: 'application/xml'\n    },\n\n    BODY_MODE = {\n        raw: 'raw',\n        file: 'file',\n        graphql: 'graphql',\n        formdata: 'formdata',\n        urlencoded: 'urlencoded'\n    };\n\n/**\n * Check if request body is empty and also handles disabled params for urlencoded\n * and formdata bodies.\n *\n * @todo Update Collection SDK isEmpty method to account for this.\n *\n * @private\n * @param {RequestBody} body -\n * @returns {Boolean}\n */\nfunction bodyIsEmpty (body) {\n    if (!body || body.disabled || body.isEmpty()) {\n        return true;\n    }\n\n    var i,\n        param,\n        mode = body.mode;\n\n    if (!(mode === BODY_MODE.formdata || mode === BODY_MODE.urlencoded)) {\n        return false;\n    }\n\n    for (i = body[mode].members.length - 1; i >= 0; i--) {\n        param = body[mode].members[i];\n        // bail out if a single enabled param is present\n        if (param && !param.disabled) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * Add new System header.\n *\n * @param {object} headers -\n * @param {String} key -\n * @param {String} value -\n */\nfunction addSystemHeader (headers, key, value) {\n    headers.add({\n        key: key,\n        value: value,\n        system: true\n    });\n}\n\n/**\n * Authorize the given request.\n *\n * @private\n * @param {Request} request -\n * @param {Function} callback -\n */\nfunction setAuthorization (request, callback) {\n    authorizeRequest(request, function (err, clonedRequest) {\n        // @note authorizeRequest returns a cloned request.\n        !clonedRequest && (clonedRequest = new Request(request.toJSON()));\n\n        if (err) {\n            return callback(null, clonedRequest);\n        }\n\n        var auth = request.auth,\n            authType = auth && auth.type,\n            manifest = _.get(authHandlers, [authType, 'manifest']),\n            headers = _.get(clonedRequest, 'headers.reference') || {},\n            queryParams = _.get(clonedRequest, 'url.query.reference') || {},\n            bodyParams = _.get(clonedRequest, 'body.urlencoded.reference') || {},\n            propertyList,\n            propertyKey,\n            property;\n\n        if (authType === 'apikey' && (auth = auth.apikey)) {\n            propertyKey = String(auth.get('key')).toLowerCase();\n            propertyList = auth.get('in') === 'query' ? queryParams : headers;\n\n            if ((property = propertyList[propertyKey])) {\n                Array.isArray(property) && (property = property[property.length - 1]);\n                property.auth = true;\n            }\n\n            return callback(null, clonedRequest);\n        }\n\n        if (!(manifest && manifest.updates)) {\n            return callback(null, clonedRequest);\n        }\n\n        manifest.updates.forEach(function (update) {\n            propertyKey = update.property;\n\n            switch (update.type) {\n                case 'header':\n                    propertyKey = propertyKey.toLowerCase();\n                    propertyList = headers;\n                    break;\n                case 'url.param':\n                    propertyList = queryParams;\n                    break;\n                case 'body.urlencoded':\n                    propertyList = bodyParams;\n                    break;\n                default: return;\n            }\n\n            if ((property = propertyList[propertyKey])) {\n                Array.isArray(property) && (property = property[property.length - 1]);\n                property.auth = true;\n            }\n        });\n\n        callback(null, clonedRequest);\n    });\n}\n\n/**\n * Adds Content-Type header based on selected request body.\n *\n * @private\n * @param {Request} request -\n * @param {Function} callback -\n */\nfunction setContentType (request, callback) {\n    // bail out if body is empty\n    if (bodyIsEmpty(request.body)) {\n        return callback(null, request);\n    }\n\n    var headers = request.headers,\n        contentLanguage;\n\n    switch (request.body.mode) {\n        case BODY_MODE.raw:\n            contentLanguage = _.get(request, 'body.options.raw.language', 'text');\n            addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_LANGUAGE[contentLanguage] ||\n                CONTENT_TYPE_LANGUAGE.text);\n            break;\n        case BODY_MODE.urlencoded:\n            addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_URLENCODED);\n            break;\n        case BODY_MODE.formdata:\n            addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_FORMDATA);\n            break;\n        case BODY_MODE.graphql:\n            addSystemHeader(headers, CONTENT_TYPE, CONTENT_TYPE_LANGUAGE.json);\n            break;\n        case BODY_MODE.file:\n            addSystemHeader(headers, CONTENT_TYPE,\n                mime.lookup(request.body.file && request.body.file.src) || DEFAULT_MIME_TYPE);\n            break;\n        default: break;\n    }\n\n    addSystemHeader(headers, 'Content-Length', CALCULATED_AT_RUNTIME);\n\n    callback(null, request);\n}\n\n/**\n * Adds Cookie header for the given request url.\n *\n * @private\n * @param {Request} request -\n * @param {Object} cookieJar -\n * @param {Function} callback -\n */\nfunction setCookie (request, cookieJar, callback) {\n    // bail out if not a valid instance of CookieJar\n    if (!(cookieJar && cookieJar.getCookieString)) {\n        return callback(null, request);\n    }\n\n    // @note don't pass request.url instance to force re-parsing of the URL\n    cookieJar.getCookieString(urlEncoder.toNodeUrl(request.url.toString()), function (err, cookies) {\n        if (err) {\n            return callback(null, request);\n        }\n\n        if (cookies && cookies.length) {\n            addSystemHeader(request.headers, COOKIE, cookies);\n        }\n\n        callback(null, request);\n    });\n}\n\n/**\n * A helper method to dry run the given request instance.\n * It returns the cloned request instance with the system added properties.\n *\n * @param {Request} request -\n * @param {Object} options -\n * @param {Object} options.cookieJar -\n * @param {Object} options.protocolProfileBehavior -\n * @param {Function} done -\n */\nfunction dryRun (request, options, done) {\n    if (!done && typeof options === FUNCTION) {\n        done = options;\n        options = {};\n    }\n\n    if (!Request.isRequest(request)) {\n        return done(new Error('Invalid Request instance'));\n    }\n\n    !options && (options = {});\n\n    var cookieJar = options.cookieJar,\n        implicitCacheControl = options.implicitCacheControl,\n        implicitTraceHeader = options.implicitTraceHeader,\n        disabledSystemHeaders = _.get(options.protocolProfileBehavior, 'disabledSystemHeaders') || {},\n        disableCookies = _.get(options.protocolProfileBehavior, 'disableCookies');\n\n    async.waterfall([\n        function setAuthorizationHeaders (next) {\n            setAuthorization(request, next);\n        },\n        function setContentTypeHeader (request, next) {\n            setContentType(request, next);\n        },\n        function setContentLength (request, next) {\n            var headers = request.headers,\n                header = headers.one('content-length');\n\n            // bail out if header added by body helper\n            if (header && header.system) {\n                return next(null, request);\n            }\n\n            switch (String(request.method).toUpperCase()) {\n                case 'GET':\n                case 'HEAD':\n                case 'TRACE':\n                case 'DELETE':\n                case 'CONNECT':\n                case 'OPTIONS':\n                    break;\n                default:\n                    addSystemHeader(headers, 'Content-Length', '0');\n                    break;\n            }\n\n            next(null, request);\n        },\n        function setCookieHeader (request, next) {\n            if (disableCookies || !cookieJar) {\n                return next(null, request);\n            }\n\n            setCookie(request, cookieJar, next);\n        },\n        function setStaticHeaders (request, next) {\n            var headers = request.headers;\n\n            // remove header added by auth helpers\n            headers.remove(function (header) {\n                return header.system && header.key.toLowerCase() === 'host';\n            });\n\n            addSystemHeader(headers, 'User-Agent', 'PostmanRuntime/' + version);\n            addSystemHeader(headers, 'Accept', '*/*');\n            addSystemHeader(headers, 'Accept-Encoding', 'gzip, deflate, br');\n            addSystemHeader(headers, 'Host', CALCULATED_AT_RUNTIME);\n            addSystemHeader(headers, 'Connection', 'keep-alive');\n            implicitCacheControl && addSystemHeader(headers, 'Cache-Control', 'no-cache');\n            implicitTraceHeader && addSystemHeader(headers, 'Postman-Token', CALCULATED_AT_RUNTIME);\n\n            next(null, request);\n        },\n        function disableSystemHeaders (request, next) {\n            var headersReference = request.headers.reference,\n                header;\n\n            _.forEach(disabledSystemHeaders, function (disabled, headerKey) {\n                if (!disabled) { return; }\n\n                if ((header = headersReference[headerKey.toLowerCase()])) {\n                    Array.isArray(header) && (header = header[header.length - 1]);\n                    header.system && (header.disabled = true);\n                }\n            });\n\n            next(null, request);\n        }\n    ], function (err, request) {\n        if (err) { return done(err); }\n\n        done(null, request);\n    });\n}\n\nmodule.exports = dryRun;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACvBC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;EACxBE,IAAI,GAAGF,OAAO,CAAC,YAAY,CAAC;EAC5BG,UAAU,GAAGH,OAAO,CAAC,qBAAqB,CAAC;EAC3CI,OAAO,GAAGJ,OAAO,CAAC,oBAAoB,CAAC,CAACI,OAAO;EAC/CC,gBAAgB,GAAGL,OAAO,CAAC,eAAe,CAAC,CAACK,gBAAgB;EAC5DC,YAAY,GAAGN,OAAO,CAAC,eAAe,CAAC,CAACO,UAAU,CAACC,QAAQ;EAC3DC,OAAO,GAAGT,OAAO,CAAC,oBAAoB,CAAC,CAACS,OAAO;EAE/CC,qBAAqB,GAAG,mCAAmC;EAC3DC,MAAM,GAAG,QAAQ;EACjBC,QAAQ,GAAG,UAAU;EACrBC,YAAY,GAAG,cAAc;EAC7BC,iBAAiB,GAAG,0BAA0B;EAC9CC,uBAAuB,GAAG,mCAAmC;EAC7DC,qBAAqB,GAAG,gCAAgC,GAAGN,qBAAqB;EAEhFO,qBAAqB,GAAG;IACpBC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,kBAAkB;IACxBC,UAAU,EAAE,wBAAwB;IACpCC,GAAG,EAAE;EACT,CAAC;EAEDC,SAAS,GAAG;IACRC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,SAAS;IAClBC,QAAQ,EAAE,UAAU;IACpBC,UAAU,EAAE;EAChB,CAAC;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAW,CAAEC,IAAI,EAAE;EACxB,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACE,OAAO,EAAE,EAAE;IAC1C,OAAO,IAAI;EACf;EAEA,IAAIC,CAAC;IACDC,KAAK;IACLC,IAAI,GAAGL,IAAI,CAACK,IAAI;EAEpB,IAAI,EAAEA,IAAI,KAAKZ,SAAS,CAACI,QAAQ,IAAIQ,IAAI,KAAKZ,SAAS,CAACK,UAAU,CAAC,EAAE;IACjE,OAAO,KAAK;EAChB;EAEA,KAAKK,CAAC,GAAGH,IAAI,CAACK,IAAI,CAAC,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAEJ,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACjDC,KAAK,GAAGJ,IAAI,CAACK,IAAI,CAAC,CAACC,OAAO,CAACH,CAAC,CAAC;IAC7B;IACA,IAAIC,KAAK,IAAI,CAACA,KAAK,CAACH,QAAQ,EAAE;MAC1B,OAAO,KAAK;IAChB;EACJ;EAEA,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,eAAe,CAAEC,OAAO,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAC3CF,OAAO,CAACG,GAAG,CAAC;IACRF,GAAG,EAAEA,GAAG;IACRC,KAAK,EAAEA,KAAK;IACZE,MAAM,EAAE;EACZ,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgB,CAAEC,OAAO,EAAEC,QAAQ,EAAE;EAC1CzC,gBAAgB,CAACwC,OAAO,EAAE,UAAUE,GAAG,EAAEC,aAAa,EAAE;IACpD;IACA,CAACA,aAAa,KAAKA,aAAa,GAAG,IAAI5C,OAAO,CAACyC,OAAO,CAACI,MAAM,EAAE,CAAC,CAAC;IAEjE,IAAIF,GAAG,EAAE;MACL,OAAOD,QAAQ,CAAC,IAAI,EAAEE,aAAa,CAAC;IACxC;IAEA,IAAIE,IAAI,GAAGL,OAAO,CAACK,IAAI;MACnBC,QAAQ,GAAGD,IAAI,IAAIA,IAAI,CAACE,IAAI;MAC5BC,QAAQ,GAAGtD,CAAC,CAACuD,GAAG,CAAChD,YAAY,EAAE,CAAC6C,QAAQ,EAAE,UAAU,CAAC,CAAC;MACtDZ,OAAO,GAAGxC,CAAC,CAACuD,GAAG,CAACN,aAAa,EAAE,mBAAmB,CAAC,IAAI,CAAC,CAAC;MACzDO,WAAW,GAAGxD,CAAC,CAACuD,GAAG,CAACN,aAAa,EAAE,qBAAqB,CAAC,IAAI,CAAC,CAAC;MAC/DQ,UAAU,GAAGzD,CAAC,CAACuD,GAAG,CAACN,aAAa,EAAE,2BAA2B,CAAC,IAAI,CAAC,CAAC;MACpES,YAAY;MACZC,WAAW;MACXC,QAAQ;IAEZ,IAAIR,QAAQ,KAAK,QAAQ,KAAKD,IAAI,GAAGA,IAAI,CAACU,MAAM,CAAC,EAAE;MAC/CF,WAAW,GAAGG,MAAM,CAACX,IAAI,CAACI,GAAG,CAAC,KAAK,CAAC,CAAC,CAACQ,WAAW,EAAE;MACnDL,YAAY,GAAGP,IAAI,CAACI,GAAG,CAAC,IAAI,CAAC,KAAK,OAAO,GAAGC,WAAW,GAAGhB,OAAO;MAEjE,IAAKoB,QAAQ,GAAGF,YAAY,CAACC,WAAW,CAAC,EAAG;QACxCK,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAC,KAAKA,QAAQ,GAAGA,QAAQ,CAACA,QAAQ,CAACtB,MAAM,GAAG,CAAC,CAAC,CAAC;QACrEsB,QAAQ,CAACT,IAAI,GAAG,IAAI;MACxB;MAEA,OAAOJ,QAAQ,CAAC,IAAI,EAAEE,aAAa,CAAC;IACxC;IAEA,IAAI,EAAEK,QAAQ,IAAIA,QAAQ,CAACY,OAAO,CAAC,EAAE;MACjC,OAAOnB,QAAQ,CAAC,IAAI,EAAEE,aAAa,CAAC;IACxC;IAEAK,QAAQ,CAACY,OAAO,CAACC,OAAO,CAAC,UAAUC,MAAM,EAAE;MACvCT,WAAW,GAAGS,MAAM,CAACR,QAAQ;MAE7B,QAAQQ,MAAM,CAACf,IAAI;QACf,KAAK,QAAQ;UACTM,WAAW,GAAGA,WAAW,CAACI,WAAW,EAAE;UACvCL,YAAY,GAAGlB,OAAO;UACtB;QACJ,KAAK,WAAW;UACZkB,YAAY,GAAGF,WAAW;UAC1B;QACJ,KAAK,iBAAiB;UAClBE,YAAY,GAAGD,UAAU;UACzB;QACJ;UAAS;MAAO;MAGpB,IAAKG,QAAQ,GAAGF,YAAY,CAACC,WAAW,CAAC,EAAG;QACxCK,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAC,KAAKA,QAAQ,GAAGA,QAAQ,CAACA,QAAQ,CAACtB,MAAM,GAAG,CAAC,CAAC,CAAC;QACrEsB,QAAQ,CAACT,IAAI,GAAG,IAAI;MACxB;IACJ,CAAC,CAAC;IAEFJ,QAAQ,CAAC,IAAI,EAAEE,aAAa,CAAC;EACjC,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoB,cAAc,CAAEvB,OAAO,EAAEC,QAAQ,EAAE;EACxC;EACA,IAAIjB,WAAW,CAACgB,OAAO,CAACf,IAAI,CAAC,EAAE;IAC3B,OAAOgB,QAAQ,CAAC,IAAI,EAAED,OAAO,CAAC;EAClC;EAEA,IAAIN,OAAO,GAAGM,OAAO,CAACN,OAAO;IACzB8B,eAAe;EAEnB,QAAQxB,OAAO,CAACf,IAAI,CAACK,IAAI;IACrB,KAAKZ,SAAS,CAACC,GAAG;MACd6C,eAAe,GAAGtE,CAAC,CAACuD,GAAG,CAACT,OAAO,EAAE,2BAA2B,EAAE,MAAM,CAAC;MACrEP,eAAe,CAACC,OAAO,EAAE1B,YAAY,EAAEI,qBAAqB,CAACoD,eAAe,CAAC,IACzEpD,qBAAqB,CAACE,IAAI,CAAC;MAC/B;IACJ,KAAKI,SAAS,CAACK,UAAU;MACrBU,eAAe,CAACC,OAAO,EAAE1B,YAAY,EAAEE,uBAAuB,CAAC;MAC/D;IACJ,KAAKQ,SAAS,CAACI,QAAQ;MACnBW,eAAe,CAACC,OAAO,EAAE1B,YAAY,EAAEG,qBAAqB,CAAC;MAC7D;IACJ,KAAKO,SAAS,CAACG,OAAO;MAClBY,eAAe,CAACC,OAAO,EAAE1B,YAAY,EAAEI,qBAAqB,CAACG,IAAI,CAAC;MAClE;IACJ,KAAKG,SAAS,CAACE,IAAI;MACfa,eAAe,CAACC,OAAO,EAAE1B,YAAY,EACjCX,IAAI,CAACoE,MAAM,CAACzB,OAAO,CAACf,IAAI,CAACL,IAAI,IAAIoB,OAAO,CAACf,IAAI,CAACL,IAAI,CAAC8C,GAAG,CAAC,IAAIzD,iBAAiB,CAAC;MACjF;IACJ;MAAS;EAAM;EAGnBwB,eAAe,CAACC,OAAO,EAAE,gBAAgB,EAAE7B,qBAAqB,CAAC;EAEjEoC,QAAQ,CAAC,IAAI,EAAED,OAAO,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2B,SAAS,CAAE3B,OAAO,EAAE4B,SAAS,EAAE3B,QAAQ,EAAE;EAC9C;EACA,IAAI,EAAE2B,SAAS,IAAIA,SAAS,CAACC,eAAe,CAAC,EAAE;IAC3C,OAAO5B,QAAQ,CAAC,IAAI,EAAED,OAAO,CAAC;EAClC;;EAEA;EACA4B,SAAS,CAACC,eAAe,CAACvE,UAAU,CAACwE,SAAS,CAAC9B,OAAO,CAAC+B,GAAG,CAACC,QAAQ,EAAE,CAAC,EAAE,UAAU9B,GAAG,EAAE+B,OAAO,EAAE;IAC5F,IAAI/B,GAAG,EAAE;MACL,OAAOD,QAAQ,CAAC,IAAI,EAAED,OAAO,CAAC;IAClC;IAEA,IAAIiC,OAAO,IAAIA,OAAO,CAACzC,MAAM,EAAE;MAC3BC,eAAe,CAACO,OAAO,CAACN,OAAO,EAAE5B,MAAM,EAAEmE,OAAO,CAAC;IACrD;IAEAhC,QAAQ,CAAC,IAAI,EAAED,OAAO,CAAC;EAC3B,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkC,MAAM,CAAElC,OAAO,EAAEmC,OAAO,EAAEC,IAAI,EAAE;EACrC,IAAI,CAACA,IAAI,IAAI,OAAOD,OAAO,KAAKpE,QAAQ,EAAE;IACtCqE,IAAI,GAAGD,OAAO;IACdA,OAAO,GAAG,CAAC,CAAC;EAChB;EAEA,IAAI,CAAC5E,OAAO,CAAC8E,SAAS,CAACrC,OAAO,CAAC,EAAE;IAC7B,OAAOoC,IAAI,CAAC,IAAIE,KAAK,CAAC,0BAA0B,CAAC,CAAC;EACtD;EAEA,CAACH,OAAO,KAAKA,OAAO,GAAG,CAAC,CAAC,CAAC;EAE1B,IAAIP,SAAS,GAAGO,OAAO,CAACP,SAAS;IAC7BW,oBAAoB,GAAGJ,OAAO,CAACI,oBAAoB;IACnDC,mBAAmB,GAAGL,OAAO,CAACK,mBAAmB;IACjDC,qBAAqB,GAAGvF,CAAC,CAACuD,GAAG,CAAC0B,OAAO,CAACO,uBAAuB,EAAE,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAC7FC,cAAc,GAAGzF,CAAC,CAACuD,GAAG,CAAC0B,OAAO,CAACO,uBAAuB,EAAE,gBAAgB,CAAC;EAE7EtF,KAAK,CAACwF,SAAS,CAAC,CACZ,SAASC,uBAAuB,CAAEC,IAAI,EAAE;IACpC/C,gBAAgB,CAACC,OAAO,EAAE8C,IAAI,CAAC;EACnC,CAAC,EACD,SAASC,oBAAoB,CAAE/C,OAAO,EAAE8C,IAAI,EAAE;IAC1CvB,cAAc,CAACvB,OAAO,EAAE8C,IAAI,CAAC;EACjC,CAAC,EACD,SAASE,gBAAgB,CAAEhD,OAAO,EAAE8C,IAAI,EAAE;IACtC,IAAIpD,OAAO,GAAGM,OAAO,CAACN,OAAO;MACzBuD,MAAM,GAAGvD,OAAO,CAACwD,GAAG,CAAC,gBAAgB,CAAC;;IAE1C;IACA,IAAID,MAAM,IAAIA,MAAM,CAACnD,MAAM,EAAE;MACzB,OAAOgD,IAAI,CAAC,IAAI,EAAE9C,OAAO,CAAC;IAC9B;IAEA,QAAQgB,MAAM,CAAChB,OAAO,CAACmD,MAAM,CAAC,CAACC,WAAW,EAAE;MACxC,KAAK,KAAK;MACV,KAAK,MAAM;MACX,KAAK,OAAO;MACZ,KAAK,QAAQ;MACb,KAAK,SAAS;MACd,KAAK,SAAS;QACV;MACJ;QACI3D,eAAe,CAACC,OAAO,EAAE,gBAAgB,EAAE,GAAG,CAAC;QAC/C;IAAM;IAGdoD,IAAI,CAAC,IAAI,EAAE9C,OAAO,CAAC;EACvB,CAAC,EACD,SAASqD,eAAe,CAAErD,OAAO,EAAE8C,IAAI,EAAE;IACrC,IAAIH,cAAc,IAAI,CAACf,SAAS,EAAE;MAC9B,OAAOkB,IAAI,CAAC,IAAI,EAAE9C,OAAO,CAAC;IAC9B;IAEA2B,SAAS,CAAC3B,OAAO,EAAE4B,SAAS,EAAEkB,IAAI,CAAC;EACvC,CAAC,EACD,SAASQ,gBAAgB,CAAEtD,OAAO,EAAE8C,IAAI,EAAE;IACtC,IAAIpD,OAAO,GAAGM,OAAO,CAACN,OAAO;;IAE7B;IACAA,OAAO,CAAC6D,MAAM,CAAC,UAAUN,MAAM,EAAE;MAC7B,OAAOA,MAAM,CAACnD,MAAM,IAAImD,MAAM,CAACtD,GAAG,CAACsB,WAAW,EAAE,KAAK,MAAM;IAC/D,CAAC,CAAC;IAEFxB,eAAe,CAACC,OAAO,EAAE,YAAY,EAAE,iBAAiB,GAAG9B,OAAO,CAAC;IACnE6B,eAAe,CAACC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;IACzCD,eAAe,CAACC,OAAO,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;IAChED,eAAe,CAACC,OAAO,EAAE,MAAM,EAAE7B,qBAAqB,CAAC;IACvD4B,eAAe,CAACC,OAAO,EAAE,YAAY,EAAE,YAAY,CAAC;IACpD6C,oBAAoB,IAAI9C,eAAe,CAACC,OAAO,EAAE,eAAe,EAAE,UAAU,CAAC;IAC7E8C,mBAAmB,IAAI/C,eAAe,CAACC,OAAO,EAAE,eAAe,EAAE7B,qBAAqB,CAAC;IAEvFiF,IAAI,CAAC,IAAI,EAAE9C,OAAO,CAAC;EACvB,CAAC,EACD,SAASwD,oBAAoB,CAAExD,OAAO,EAAE8C,IAAI,EAAE;IAC1C,IAAIW,gBAAgB,GAAGzD,OAAO,CAACN,OAAO,CAACgE,SAAS;MAC5CT,MAAM;IAEV/F,CAAC,CAACmE,OAAO,CAACoB,qBAAqB,EAAE,UAAUvD,QAAQ,EAAEyE,SAAS,EAAE;MAC5D,IAAI,CAACzE,QAAQ,EAAE;QAAE;MAAQ;MAEzB,IAAK+D,MAAM,GAAGQ,gBAAgB,CAACE,SAAS,CAAC1C,WAAW,EAAE,CAAC,EAAG;QACtDC,KAAK,CAACC,OAAO,CAAC8B,MAAM,CAAC,KAAKA,MAAM,GAAGA,MAAM,CAACA,MAAM,CAACzD,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7DyD,MAAM,CAACnD,MAAM,KAAKmD,MAAM,CAAC/D,QAAQ,GAAG,IAAI,CAAC;MAC7C;IACJ,CAAC,CAAC;IAEF4D,IAAI,CAAC,IAAI,EAAE9C,OAAO,CAAC;EACvB,CAAC,CACJ,EAAE,UAAUE,GAAG,EAAEF,OAAO,EAAE;IACvB,IAAIE,GAAG,EAAE;MAAE,OAAOkC,IAAI,CAAClC,GAAG,CAAC;IAAE;IAE7BkC,IAAI,CAAC,IAAI,EAAEpC,OAAO,CAAC;EACvB,CAAC,CAAC;AACN;AAEA4D,MAAM,CAACC,OAAO,GAAG3B,MAAM"},"metadata":{},"sourceType":"script"}