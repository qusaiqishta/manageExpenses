{"ast":null,"code":"/* eslint-disable object-shorthand */\nvar _ = require('lodash'),\n  url = require('./url'),\n  rnd = Math.random;\nmodule.exports = {\n  // @todo: Add support for a `json` type once it becomes available\n  typeMap: {\n    string: 'string',\n    boolean: 'boolean',\n    number: 'number'\n  },\n  /**\n   * Returns unique GUID on every call as per pseudo-number RFC4122 standards.\n   *\n   * @type {function}\n   * @returns {string}\n   */\n  uid: function () {\n    var n,\n      r,\n      E = '',\n      H = '-'; // r = result , n = numeric variable for positional checks\n\n    // if \"n\" is not 9 or 14 or 19 or 24 return a random number or 4\n    // if \"n\" is not 15 generate a random number from 0 to 15\n    // `(n ^ 20 ? 16 : 4)` := unless \"n\" is 20, in which case a random number from 8 to 11 otherwise 4\n    //\n    // in other cases (if \"n\" is 9,14,19,24) insert \"-\"\n    // eslint-disable-next-line curly\n    for (r = n = E; n++ < 36; r += n * 51 & 52 ? (n ^ 15 ? 8 ^ rnd() * (n ^ 20 ? 16 : 4) : 4).toString(16) : H);\n    return r;\n  },\n  urlparse: function (u) {\n    return url.parse(u);\n  },\n  urlunparse: function (urlObj) {\n    return url.unparse(urlObj);\n  },\n  /**\n   * A generic utility method to sanitize variable transformations across collection formats.\n   *\n   * @param {Object} entity - A generic object that could contain variable data.\n   * @param {?Object} options - The set of options for variable handling.\n   * @param {?Object} options.fallback - The fallback values to be used if no variables are present.\n   * @param {?Boolean} options.noDefaults - When set to true, id will be retained.\n   * @param {?Boolean} options.retainEmptyValues - When set to true, empty property values will be set to ''\n   * @param {?Boolean} options.retainIds - When set to true, ids are left as is.\n   * instead of being deleted.\n   * @param {Object} [modifiers] - A set of behavioral modifiers for variable handling.\n   * @param {Boolean} [modifiers.isV1=false] - When set to true, looks for the pathVariableData property as well.\n   * @returns {Object[]} - The set of sanitized entity level variables.\n   */\n  handleVars: function (entity, options, modifiers) {\n    !options && (options = {});\n    var self = this,\n      retainIds = options.retainIds,\n      noDefaults = options.noDefaults,\n      isV1 = modifiers && modifiers.isV1,\n      retainEmpty = options.retainEmptyValues,\n      source = entity && (entity.variables || entity.variable || isV1 && entity.pathVariableData),\n      fallback = options.fallback && options.fallback.values,\n      result = _.map(source || fallback, function (item) {\n        var result = {};\n\n        // add id only when retainIds is set\n        if (retainIds) {\n          // retain id only when `id` field is present\n          if (_.has(item, 'id')) {\n            result.id = item.id;\n          }\n          // or, create a new id if noDefaults is false\n          else if (!noDefaults) {\n            result.id = self.uid();\n          }\n        }\n        result.key = item.key || item.id;\n        result.value = item.value;\n        item.type && (result.type = item.type === 'text' ? 'string' : item.type);\n        item.disabled && (result.disabled = true);\n        if (item.description) {\n          result.description = item.description;\n        } else if (retainEmpty) {\n          result.description = null;\n        }\n        return result;\n      });\n    if (result.length) {\n      return result;\n    }\n  },\n  /**\n   * Performs auth cleansing common to all sorts of auth transformations.\n   *\n   * @param {Object} entity - The wrapped auth entity to be cleaned.\n   * @param {?Object} options - The set of options for the current auth cleansing operation.\n   * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n   * @returns {Object|*} - The processed auth data.\n   */\n  cleanAuth: function (entity, options) {\n    !options && (options = {});\n    var auth = entity && entity.auth;\n    if (auth === null) {\n      return null;\n    } // eslint-disable-line security/detect-possible-timing-attacks\n    if (!(auth && auth.type)) {\n      return;\n    }\n    if (auth.type === 'noauth') {\n      return options.excludeNoauth ? null : {\n        type: 'noauth'\n      };\n    }\n    return auth;\n  },\n  cleanEmptyValue: function (entity, property, retainEmpty) {\n    if (_.has(entity, property) && !entity[property]) {\n      retainEmpty ? entity[property] = null : delete entity[property];\n    }\n    return entity;\n  },\n  /**\n   * Transforms an array of auth params to their object equivalent.\n   *\n   * @param {Object} entity - The wrapper object for the array of auth params.\n   * @param {?Object} options - The set of options for the current auth cleansing operation.\n   * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n   * @returns {*}\n   */\n  authArrayToMap: function (entity, options) {\n    var type,\n      result,\n      self = this,\n      auth = self.cleanAuth(entity, options);\n    if (!auth) {\n      return auth;\n    }\n    result = {\n      type: type = auth.type\n    };\n    if (type !== 'noauth') {\n      result[type] = _.transform(auth[type], function (result, param) {\n        result[param.key] = param.value;\n      }, {});\n    }\n    return result;\n  },\n  /**\n   * Transforms an object of auth params to their array equivalent.\n   *\n   * @param {Object} entity - The wrapper object for the array of auth params.\n   * @param {?Object} options - The set of options for the current auth cleansing operation.\n   * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n   * @returns {*}\n   */\n  authMapToArray: function (entity, options) {\n    var type,\n      params,\n      result,\n      self = this,\n      auth = self.cleanAuth(entity, options);\n    if (!auth) {\n      return auth;\n    }\n    result = {\n      type: type = auth.type\n    };\n    if (type !== 'noauth') {\n      // @todo: Handle all non _ prefixed properties, ala request bodies\n      params = _.map(auth[type], function (value, key) {\n        return {\n          key: key,\n          value: value,\n          type: self.typeMap[typeof value] || 'any'\n        };\n      });\n      params.length && (result[type] = params);\n    }\n    return result;\n  },\n  /**\n   * Sanitizes a collection SDK compliant auth list.\n   *\n   * @param {Object} entity - The wrapper entity for the auth manifest.\n   * @param {?Object} options - The set of options for the current auth cleansing operation.\n   * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n   * @returns {Object[]} - An array of raw collection SDK compliant auth parameters.\n   */\n  sanitizeAuthArray: function (entity, options) {\n    var type,\n      result,\n      self = this,\n      auth = self.cleanAuth(entity, options);\n    if (!auth) {\n      return auth;\n    }\n    result = {\n      type: type = auth.type\n    };\n    if (type !== 'noauth') {\n      result[type] = _.map(auth[type], function (param) {\n        return {\n          key: param.key,\n          value: param.value,\n          type: (param.type === 'text' ? 'string' : param.type) || self.typeMap[typeof param.value] || 'any'\n        };\n      });\n    }\n    return result;\n  },\n  /**\n   * A helper function to determine if the provided v1 entity has legacy properties.\n   *\n   * @private\n   * @param {Object} entityV1 - The v1 entity to be checked for the presence of legacy properties.\n   * @param {String} type - The type of property to be adjudged against.\n   * @returns {Boolean|*} - A flag to indicate the legacy property status of the passed v1 entity.\n   */\n  notLegacy: function (entityV1, type) {\n    if (!entityV1) {\n      return;\n    }\n    switch (type) {\n      case 'event':\n        return !(entityV1.tests || entityV1.preRequestScript);\n      case 'auth':\n        return _.has(entityV1, 'auth') && !(_.has(entityV1, 'currentHelper') || entityV1.helperAttributes);\n      default:\n        return true;\n    }\n  },\n  authMappersFromLegacy: {\n    apikeyAuth: function (oldParams) {\n      return oldParams && {\n        key: oldParams.key,\n        value: oldParams.value,\n        in: oldParams.in\n      };\n    },\n    basicAuth: function (oldParams) {\n      return oldParams && {\n        username: oldParams.username,\n        password: oldParams.password,\n        saveHelperData: oldParams.saveToRequest,\n        showPassword: false\n      };\n    },\n    bearerAuth: function (oldParams) {\n      return oldParams && {\n        token: oldParams.token\n      };\n    },\n    digestAuth: function (oldParams) {\n      return oldParams && {\n        algorithm: oldParams.algorithm,\n        username: oldParams.username,\n        realm: oldParams.realm,\n        password: oldParams.password,\n        nonce: oldParams.nonce,\n        nonceCount: oldParams.nonceCount,\n        clientNonce: oldParams.clientNonce,\n        opaque: oldParams.opaque,\n        qop: oldParams.qop,\n        disableRetryRequest: oldParams.disableRetryRequest\n      };\n    },\n    oAuth1: function (oldParams) {\n      return oldParams && {\n        consumerKey: oldParams.consumerKey,\n        consumerSecret: oldParams.consumerSecret,\n        token: oldParams.token,\n        tokenSecret: oldParams.tokenSecret,\n        signatureMethod: oldParams.signatureMethod,\n        timestamp: oldParams.timestamp,\n        nonce: oldParams.nonce,\n        version: oldParams.version,\n        realm: oldParams.realm,\n        addParamsToHeader: oldParams.header,\n        autoAddParam: oldParams.auto,\n        addEmptyParamsToSign: oldParams.includeEmpty\n      };\n    },\n    hawkAuth: function (oldParams) {\n      return oldParams && {\n        authId: oldParams.hawk_id,\n        authKey: oldParams.hawk_key,\n        algorithm: oldParams.algorithm,\n        user: oldParams.user,\n        saveHelperData: oldParams.saveToRequest,\n        nonce: oldParams.nonce,\n        extraData: oldParams.ext,\n        appId: oldParams.app,\n        delegation: oldParams.dlg,\n        timestamp: oldParams.timestamp\n      };\n    },\n    ntlmAuth: function (oldParams) {\n      return oldParams && {\n        username: oldParams.username,\n        password: oldParams.password,\n        domain: oldParams.domain,\n        workstation: oldParams.workstation,\n        disableRetryRequest: oldParams.disableRetryRequest\n      };\n    },\n    oAuth2: function (oldParams) {\n      return oldParams && {\n        accessToken: oldParams.accessToken,\n        addTokenTo: oldParams.addTokenTo,\n        callBackUrl: oldParams.callBackUrl,\n        authUrl: oldParams.authUrl,\n        accessTokenUrl: oldParams.accessTokenUrl,\n        clientId: oldParams.clientId,\n        clientSecret: oldParams.clientSecret,\n        clientAuth: oldParams.clientAuth,\n        grantType: oldParams.grantType,\n        scope: oldParams.scope,\n        username: oldParams.username,\n        password: oldParams.password,\n        tokenType: oldParams.tokenType,\n        redirectUri: oldParams.redirectUri,\n        refreshToken: oldParams.refreshToken\n      };\n    },\n    // Only exists for consistency\n    awsSigV4: function (oldParams) {\n      return oldParams;\n    }\n  },\n  authMappersFromCurrent: {\n    apikeyAuth: function (newParams) {\n      return newParams && {\n        id: 'apikey',\n        key: newParams.key,\n        value: newParams.value,\n        in: newParams.in\n      };\n    },\n    basicAuth: function (newParams) {\n      return newParams && {\n        id: 'basic',\n        username: newParams.username,\n        password: newParams.password,\n        saveToRequest: newParams.saveHelperData\n      };\n    },\n    bearerAuth: function (newParams) {\n      return newParams && {\n        id: 'bearer',\n        token: newParams.token\n      };\n    },\n    digestAuth: function (newParams) {\n      return newParams && {\n        id: 'digest',\n        algorithm: newParams.algorithm,\n        username: newParams.username,\n        realm: newParams.realm,\n        password: newParams.password,\n        nonce: newParams.nonce,\n        nonceCount: newParams.nonceCount,\n        clientNonce: newParams.clientNonce,\n        opaque: newParams.opaque,\n        qop: newParams.qop,\n        disableRetryRequest: newParams.disableRetryRequest\n      };\n    },\n    oAuth1: function (newParams) {\n      return newParams && {\n        id: 'oAuth1',\n        consumerKey: newParams.consumerKey,\n        consumerSecret: newParams.consumerSecret,\n        token: newParams.token,\n        tokenSecret: newParams.tokenSecret,\n        signatureMethod: newParams.signatureMethod,\n        timestamp: newParams.timeStamp || newParams.timestamp,\n        nonce: newParams.nonce,\n        version: newParams.version,\n        realm: newParams.realm,\n        header: newParams.addParamsToHeader,\n        auto: newParams.autoAddParam,\n        includeEmpty: newParams.addEmptyParamsToSign\n      };\n    },\n    hawkAuth: function (newParams) {\n      return newParams && {\n        id: 'hawk',\n        hawk_id: newParams.authId,\n        hawk_key: newParams.authKey,\n        algorithm: newParams.algorithm,\n        user: newParams.user,\n        saveToRequest: newParams.saveHelperData,\n        nonce: newParams.nonce,\n        ext: newParams.extraData,\n        app: newParams.appId,\n        dlg: newParams.delegation,\n        timestamp: newParams.timestamp\n      };\n    },\n    ntlmAuth: function (newParams) {\n      return newParams && {\n        id: 'ntlm',\n        username: newParams.username,\n        password: newParams.password,\n        domain: newParams.domain,\n        workstation: newParams.workstation,\n        disableRetryRequest: newParams.disableRetryRequest\n      };\n    },\n    oAuth2: function (newParams) {\n      return newParams && {\n        id: 'oAuth2',\n        accessToken: newParams.accessToken,\n        addTokenTo: newParams.addTokenTo,\n        callBackUrl: newParams.callBackUrl,\n        authUrl: newParams.authUrl,\n        accessTokenUrl: newParams.accessTokenUrl,\n        clientId: newParams.clientId,\n        clientSecret: newParams.clientSecret,\n        clientAuth: newParams.clientAuth,\n        grantType: newParams.grantType,\n        scope: newParams.scope,\n        username: newParams.username,\n        password: newParams.password,\n        tokenType: newParams.tokenType,\n        redirectUri: newParams.redirectUri,\n        refreshToken: newParams.refreshToken\n      };\n    },\n    // Only exists for consistency\n    awsSigV4: function (newParams) {\n      return newParams;\n    }\n  },\n  /**\n   * Validate protocolProfileBehavior property's value.\n   *\n   * @param {Object} source - A generic object that could contain the protocolProfileBehavior property.\n   * @param {?Object} destination - The destination object that needs the addition of protocolProfileBehavior.\n   * @returns {Boolean} - A Boolean value to decide whether to include the property or not.\n   */\n  addProtocolProfileBehavior: function (source, destination) {\n    var behavior = source && source.protocolProfileBehavior;\n\n    // make sure it's a non-empty plain object\n    if (!(_.isPlainObject(behavior) && !_.isEmpty(behavior))) {\n      return false;\n    }\n    destination && (destination.protocolProfileBehavior = behavior);\n    return true;\n  }\n};","map":{"version":3,"names":["_","require","url","rnd","Math","random","module","exports","typeMap","string","boolean","number","uid","n","r","E","H","toString","urlparse","u","parse","urlunparse","urlObj","unparse","handleVars","entity","options","modifiers","self","retainIds","noDefaults","isV1","retainEmpty","retainEmptyValues","source","variables","variable","pathVariableData","fallback","values","result","map","item","has","id","key","value","type","disabled","description","length","cleanAuth","auth","excludeNoauth","cleanEmptyValue","property","authArrayToMap","transform","param","authMapToArray","params","sanitizeAuthArray","notLegacy","entityV1","tests","preRequestScript","helperAttributes","authMappersFromLegacy","apikeyAuth","oldParams","in","basicAuth","username","password","saveHelperData","saveToRequest","showPassword","bearerAuth","token","digestAuth","algorithm","realm","nonce","nonceCount","clientNonce","opaque","qop","disableRetryRequest","oAuth1","consumerKey","consumerSecret","tokenSecret","signatureMethod","timestamp","version","addParamsToHeader","header","autoAddParam","auto","addEmptyParamsToSign","includeEmpty","hawkAuth","authId","hawk_id","authKey","hawk_key","user","extraData","ext","appId","app","delegation","dlg","ntlmAuth","domain","workstation","oAuth2","accessToken","addTokenTo","callBackUrl","authUrl","accessTokenUrl","clientId","clientSecret","clientAuth","grantType","scope","tokenType","redirectUri","refreshToken","awsSigV4","authMappersFromCurrent","newParams","timeStamp","addProtocolProfileBehavior","destination","behavior","protocolProfileBehavior","isPlainObject","isEmpty"],"sources":["/Users/Qusai.Qishta/node_modules/postman-collection-transformer/lib/util.js"],"sourcesContent":["/* eslint-disable object-shorthand */\nvar _ = require('lodash'),\n    url = require('./url'),\n    rnd = Math.random;\n\nmodule.exports = {\n    // @todo: Add support for a `json` type once it becomes available\n    typeMap: {\n        string: 'string',\n        boolean: 'boolean',\n        number: 'number'\n    },\n\n    /**\n     * Returns unique GUID on every call as per pseudo-number RFC4122 standards.\n     *\n     * @type {function}\n     * @returns {string}\n     */\n    uid: function () {\n        var n,\n            r,\n            E = '',\n            H = '-'; // r = result , n = numeric variable for positional checks\n\n        // if \"n\" is not 9 or 14 or 19 or 24 return a random number or 4\n        // if \"n\" is not 15 generate a random number from 0 to 15\n        // `(n ^ 20 ? 16 : 4)` := unless \"n\" is 20, in which case a random number from 8 to 11 otherwise 4\n        //\n        // in other cases (if \"n\" is 9,14,19,24) insert \"-\"\n        // eslint-disable-next-line curly\n        for (r = n = E; n++ < 36; r += n * 51 & 52 ? (n ^ 15 ? 8 ^ rnd() * (n ^ 20 ? 16 : 4) : 4).toString(16) : H);\n\n        return r;\n    },\n\n    urlparse: function (u) {\n        return url.parse(u);\n    },\n\n    urlunparse: function (urlObj) {\n        return url.unparse(urlObj);\n    },\n\n    /**\n     * A generic utility method to sanitize variable transformations across collection formats.\n     *\n     * @param {Object} entity - A generic object that could contain variable data.\n     * @param {?Object} options - The set of options for variable handling.\n     * @param {?Object} options.fallback - The fallback values to be used if no variables are present.\n     * @param {?Boolean} options.noDefaults - When set to true, id will be retained.\n     * @param {?Boolean} options.retainEmptyValues - When set to true, empty property values will be set to ''\n     * @param {?Boolean} options.retainIds - When set to true, ids are left as is.\n     * instead of being deleted.\n     * @param {Object} [modifiers] - A set of behavioral modifiers for variable handling.\n     * @param {Boolean} [modifiers.isV1=false] - When set to true, looks for the pathVariableData property as well.\n     * @returns {Object[]} - The set of sanitized entity level variables.\n     */\n    handleVars: function (entity, options, modifiers) {\n        !options && (options = {});\n\n        var self = this,\n            retainIds = options.retainIds,\n            noDefaults = options.noDefaults,\n            isV1 = modifiers && modifiers.isV1,\n            retainEmpty = options.retainEmptyValues,\n            source = entity && (entity.variables || entity.variable || (isV1 && entity.pathVariableData)),\n            fallback = options.fallback && options.fallback.values,\n            result = _.map(source || fallback, function (item) {\n                var result = {};\n\n                // add id only when retainIds is set\n                if (retainIds) {\n                    // retain id only when `id` field is present\n                    if (_.has(item, 'id')) {\n                        result.id = item.id;\n                    }\n                    // or, create a new id if noDefaults is false\n                    else if (!noDefaults) {\n                        result.id = self.uid();\n                    }\n                }\n\n                result.key = item.key || item.id;\n                result.value = item.value;\n\n                item.type && (result.type = item.type === 'text' ? 'string' : item.type);\n                item.disabled && (result.disabled = true);\n\n                if (item.description) { result.description = item.description; }\n                else if (retainEmpty) { result.description = null; }\n\n                return result;\n            });\n\n        if (result.length) { return result; }\n    },\n\n    /**\n     * Performs auth cleansing common to all sorts of auth transformations.\n     *\n     * @param {Object} entity - The wrapped auth entity to be cleaned.\n     * @param {?Object} options - The set of options for the current auth cleansing operation.\n     * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n     * @returns {Object|*} - The processed auth data.\n     */\n    cleanAuth: function (entity, options) {\n        !options && (options = {});\n\n        var auth = entity && entity.auth;\n\n        if (auth === null) { return null; } // eslint-disable-line security/detect-possible-timing-attacks\n        if (!(auth && auth.type)) { return; }\n        if (auth.type === 'noauth') {\n            return options.excludeNoauth ? null : { type: 'noauth' };\n        }\n\n        return auth;\n    },\n\n    cleanEmptyValue: function (entity, property, retainEmpty) {\n        if (_.has(entity, property) && !entity[property]) {\n            retainEmpty ? (entity[property] = null) : (delete entity[property]);\n        }\n\n        return entity;\n    },\n\n    /**\n     * Transforms an array of auth params to their object equivalent.\n     *\n     * @param {Object} entity - The wrapper object for the array of auth params.\n     * @param {?Object} options - The set of options for the current auth cleansing operation.\n     * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n     * @returns {*}\n     */\n    authArrayToMap: function (entity, options) {\n        var type,\n            result,\n            self = this,\n            auth = self.cleanAuth(entity, options);\n\n        if (!auth) { return auth; }\n\n        result = { type: (type = auth.type) };\n\n        if (type !== 'noauth') {\n            result[type] = _.transform(auth[type], function (result, param) {\n                result[param.key] = param.value;\n            }, {});\n        }\n\n        return result;\n    },\n\n    /**\n     * Transforms an object of auth params to their array equivalent.\n     *\n     * @param {Object} entity - The wrapper object for the array of auth params.\n     * @param {?Object} options - The set of options for the current auth cleansing operation.\n     * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n     * @returns {*}\n     */\n    authMapToArray: function (entity, options) {\n        var type,\n            params,\n            result,\n            self = this,\n            auth = self.cleanAuth(entity, options);\n\n        if (!auth) { return auth; }\n\n        result = { type: (type = auth.type) };\n\n        if (type !== 'noauth') {\n            // @todo: Handle all non _ prefixed properties, ala request bodies\n            params = _.map(auth[type], function (value, key) {\n                return {\n                    key: key,\n                    value: value,\n                    type: self.typeMap[typeof value] || 'any'\n                };\n            });\n\n            params.length && (result[type] = params);\n        }\n\n        return result;\n    },\n\n    /**\n     * Sanitizes a collection SDK compliant auth list.\n     *\n     * @param {Object} entity - The wrapper entity for the auth manifest.\n     * @param {?Object} options - The set of options for the current auth cleansing operation.\n     * @param {?Boolean} [options.excludeNoauth=false] - When set to true, noauth is set to null.\n     * @returns {Object[]} - An array of raw collection SDK compliant auth parameters.\n     */\n    sanitizeAuthArray: function (entity, options) {\n        var type,\n            result,\n            self = this,\n            auth = self.cleanAuth(entity, options);\n\n        if (!auth) { return auth; }\n\n        result = { type: (type = auth.type) };\n\n        if (type !== 'noauth') {\n            result[type] = _.map(auth[type], function (param) {\n                return {\n                    key: param.key,\n                    value: param.value,\n                    type: (param.type === 'text' ? 'string' : param.type) || self.typeMap[typeof param.value] || 'any'\n                };\n            });\n        }\n\n        return result;\n    },\n\n    /**\n     * A helper function to determine if the provided v1 entity has legacy properties.\n     *\n     * @private\n     * @param {Object} entityV1 - The v1 entity to be checked for the presence of legacy properties.\n     * @param {String} type - The type of property to be adjudged against.\n     * @returns {Boolean|*} - A flag to indicate the legacy property status of the passed v1 entity.\n     */\n    notLegacy: function (entityV1, type) {\n        if (!entityV1) { return; }\n\n        switch (type) {\n            case 'event':\n                return !(entityV1.tests || entityV1.preRequestScript);\n            case 'auth':\n                return _.has(entityV1, 'auth') && !(_.has(entityV1, 'currentHelper') || entityV1.helperAttributes);\n            default:\n                return true;\n        }\n    },\n\n    authMappersFromLegacy: {\n        apikeyAuth: function (oldParams) {\n            return oldParams && {\n                key: oldParams.key,\n                value: oldParams.value,\n                in: oldParams.in\n            };\n        },\n        basicAuth: function (oldParams) {\n            return oldParams && {\n                username: oldParams.username,\n                password: oldParams.password,\n                saveHelperData: oldParams.saveToRequest,\n                showPassword: false\n            };\n        },\n        bearerAuth: function (oldParams) {\n            return oldParams && {\n                token: oldParams.token\n            };\n        },\n        digestAuth: function (oldParams) {\n            return oldParams && {\n                algorithm: oldParams.algorithm,\n                username: oldParams.username,\n                realm: oldParams.realm,\n                password: oldParams.password,\n                nonce: oldParams.nonce,\n                nonceCount: oldParams.nonceCount,\n                clientNonce: oldParams.clientNonce,\n                opaque: oldParams.opaque,\n                qop: oldParams.qop,\n                disableRetryRequest: oldParams.disableRetryRequest\n            };\n        },\n        oAuth1: function (oldParams) {\n            return oldParams && {\n                consumerKey: oldParams.consumerKey,\n                consumerSecret: oldParams.consumerSecret,\n                token: oldParams.token,\n                tokenSecret: oldParams.tokenSecret,\n                signatureMethod: oldParams.signatureMethod,\n                timestamp: oldParams.timestamp,\n                nonce: oldParams.nonce,\n                version: oldParams.version,\n                realm: oldParams.realm,\n                addParamsToHeader: oldParams.header,\n                autoAddParam: oldParams.auto,\n                addEmptyParamsToSign: oldParams.includeEmpty\n            };\n        },\n        hawkAuth: function (oldParams) {\n            return oldParams && {\n                authId: oldParams.hawk_id,\n                authKey: oldParams.hawk_key,\n                algorithm: oldParams.algorithm,\n                user: oldParams.user,\n                saveHelperData: oldParams.saveToRequest,\n                nonce: oldParams.nonce,\n                extraData: oldParams.ext,\n                appId: oldParams.app,\n                delegation: oldParams.dlg,\n                timestamp: oldParams.timestamp\n            };\n        },\n        ntlmAuth: function (oldParams) {\n            return oldParams && {\n                username: oldParams.username,\n                password: oldParams.password,\n                domain: oldParams.domain,\n                workstation: oldParams.workstation,\n                disableRetryRequest: oldParams.disableRetryRequest\n            };\n        },\n        oAuth2: function (oldParams) {\n            return oldParams && {\n                accessToken: oldParams.accessToken,\n                addTokenTo: oldParams.addTokenTo,\n                callBackUrl: oldParams.callBackUrl,\n                authUrl: oldParams.authUrl,\n                accessTokenUrl: oldParams.accessTokenUrl,\n                clientId: oldParams.clientId,\n                clientSecret: oldParams.clientSecret,\n                clientAuth: oldParams.clientAuth,\n                grantType: oldParams.grantType,\n                scope: oldParams.scope,\n                username: oldParams.username,\n                password: oldParams.password,\n                tokenType: oldParams.tokenType,\n                redirectUri: oldParams.redirectUri,\n                refreshToken: oldParams.refreshToken\n            };\n        },\n        // Only exists for consistency\n        awsSigV4: function (oldParams) {\n            return oldParams;\n        }\n    },\n    authMappersFromCurrent: {\n        apikeyAuth: function (newParams) {\n            return newParams && {\n                id: 'apikey',\n                key: newParams.key,\n                value: newParams.value,\n                in: newParams.in\n            };\n        },\n        basicAuth: function (newParams) {\n            return newParams && {\n                id: 'basic',\n                username: newParams.username,\n                password: newParams.password,\n                saveToRequest: newParams.saveHelperData\n            };\n        },\n        bearerAuth: function (newParams) {\n            return newParams && {\n                id: 'bearer',\n                token: newParams.token\n            };\n        },\n        digestAuth: function (newParams) {\n            return newParams && {\n                id: 'digest',\n                algorithm: newParams.algorithm,\n                username: newParams.username,\n                realm: newParams.realm,\n                password: newParams.password,\n                nonce: newParams.nonce,\n                nonceCount: newParams.nonceCount,\n                clientNonce: newParams.clientNonce,\n                opaque: newParams.opaque,\n                qop: newParams.qop,\n                disableRetryRequest: newParams.disableRetryRequest\n            };\n        },\n        oAuth1: function (newParams) {\n            return newParams && {\n                id: 'oAuth1',\n                consumerKey: newParams.consumerKey,\n                consumerSecret: newParams.consumerSecret,\n                token: newParams.token,\n                tokenSecret: newParams.tokenSecret,\n                signatureMethod: newParams.signatureMethod,\n                timestamp: newParams.timeStamp || newParams.timestamp,\n                nonce: newParams.nonce,\n                version: newParams.version,\n                realm: newParams.realm,\n                header: newParams.addParamsToHeader,\n                auto: newParams.autoAddParam,\n                includeEmpty: newParams.addEmptyParamsToSign\n            };\n        },\n        hawkAuth: function (newParams) {\n            return newParams && {\n                id: 'hawk',\n                hawk_id: newParams.authId,\n                hawk_key: newParams.authKey,\n                algorithm: newParams.algorithm,\n                user: newParams.user,\n                saveToRequest: newParams.saveHelperData,\n                nonce: newParams.nonce,\n                ext: newParams.extraData,\n                app: newParams.appId,\n                dlg: newParams.delegation,\n                timestamp: newParams.timestamp\n            };\n        },\n        ntlmAuth: function (newParams) {\n            return newParams && {\n                id: 'ntlm',\n                username: newParams.username,\n                password: newParams.password,\n                domain: newParams.domain,\n                workstation: newParams.workstation,\n                disableRetryRequest: newParams.disableRetryRequest\n            };\n        },\n        oAuth2: function (newParams) {\n            return newParams && {\n                id: 'oAuth2',\n                accessToken: newParams.accessToken,\n                addTokenTo: newParams.addTokenTo,\n                callBackUrl: newParams.callBackUrl,\n                authUrl: newParams.authUrl,\n                accessTokenUrl: newParams.accessTokenUrl,\n                clientId: newParams.clientId,\n                clientSecret: newParams.clientSecret,\n                clientAuth: newParams.clientAuth,\n                grantType: newParams.grantType,\n                scope: newParams.scope,\n                username: newParams.username,\n                password: newParams.password,\n                tokenType: newParams.tokenType,\n                redirectUri: newParams.redirectUri,\n                refreshToken: newParams.refreshToken\n            };\n        },\n        // Only exists for consistency\n        awsSigV4: function (newParams) {\n            return newParams;\n        }\n    },\n\n    /**\n     * Validate protocolProfileBehavior property's value.\n     *\n     * @param {Object} source - A generic object that could contain the protocolProfileBehavior property.\n     * @param {?Object} destination - The destination object that needs the addition of protocolProfileBehavior.\n     * @returns {Boolean} - A Boolean value to decide whether to include the property or not.\n     */\n    addProtocolProfileBehavior: function (source, destination) {\n        var behavior = source && source.protocolProfileBehavior;\n\n        // make sure it's a non-empty plain object\n        if (!(_.isPlainObject(behavior) && !_.isEmpty(behavior))) { return false; }\n\n        destination && (destination.protocolProfileBehavior = behavior);\n\n        return true;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}