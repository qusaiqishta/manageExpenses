{"ast":null,"code":"var IS_WINDOWS = /^win/.test(process.platform),\n  subsets,\n  symbols;\n\n/**\n * A set of symbol groups for use in different situations: regular, windows friendly unicode, and plain text.\n *\n * @type {Object}\n */\nsubsets = {\n  regular: {\n    console: {\n      top: '┌',\n      middle: '│',\n      bottom: '└'\n    },\n    dot: '.',\n    folder: '❏',\n    root: '→',\n    sub: '↳',\n    ok: '✓',\n    error: '✖',\n    star: '★',\n    up: '↑',\n    down: '↓'\n  },\n  encoded: {\n    console: {\n      top: '\\u250C',\n      middle: '\\u2502',\n      bottom: '\\u2514'\n    },\n    dot: '.',\n    folder: '\\u25A1',\n    root: '\\u2192',\n    sub: '\\u2514',\n    ok: '\\u221A',\n    error: '\\u00D7',\n    star: '\\u2605',\n    up: '\\u2191',\n    down: '\\u2193'\n  },\n  plainText: {\n    console: {\n      top: '-',\n      middle: '|',\n      bottom: '-'\n    },\n    dot: '.',\n    folder: 'Folder',\n    root: 'Root',\n    sub: 'Sub-folder',\n    ok: 'Pass',\n    error: 'Fail',\n    star: '*',\n    up: '^',\n    down: 'v'\n  }\n};\n\n/**\n * A method that picks the appropriate set of CLI report symbols under a given set of run conditions.\n *\n * @param  {Boolean} disableUnicode - A flag to force plain text equivalents for CLI symbols if set to true.\n * @returns {Object} - The right set of symbols from subsets for the given conditions.\n * @todo Add additional parameter related to temp file read - writes\n */\nsymbols = function (disableUnicode) {\n  if (disableUnicode) {\n    return subsets.plainText;\n  }\n  if (IS_WINDOWS) {\n    // modify symbols for windows platforms\n    return subsets.encoded;\n  }\n  return subsets.regular;\n};\nmodule.exports = symbols;","map":{"version":3,"names":["IS_WINDOWS","test","process","platform","subsets","symbols","regular","console","top","middle","bottom","dot","folder","root","sub","ok","error","star","up","down","encoded","plainText","disableUnicode","module","exports"],"sources":["/Users/Qusai.Qishta/node_modules/newman/lib/reporters/cli/cli-utils-symbols.js"],"sourcesContent":["var IS_WINDOWS = (/^win/).test(process.platform),\n    subsets,\n    symbols;\n\n/**\n * A set of symbol groups for use in different situations: regular, windows friendly unicode, and plain text.\n *\n * @type {Object}\n */\nsubsets = {\n    regular: {\n        console: {\n            top: '┌',\n            middle: '│',\n            bottom: '└'\n        },\n        dot: '.',\n        folder: '❏',\n        root: '→',\n        sub: '↳',\n        ok: '✓',\n        error: '✖',\n        star: '★',\n        up: '↑',\n        down: '↓'\n    },\n    encoded: {\n        console: {\n            top: '\\u250C',\n            middle: '\\u2502',\n            bottom: '\\u2514'\n        },\n        dot: '.',\n        folder: '\\u25A1',\n        root: '\\u2192',\n        sub: '\\u2514',\n        ok: '\\u221A',\n        error: '\\u00D7',\n        star: '\\u2605',\n        up: '\\u2191',\n        down: '\\u2193'\n    },\n    plainText: {\n        console: {\n            top: '-',\n            middle: '|',\n            bottom: '-'\n        },\n        dot: '.',\n        folder: 'Folder',\n        root: 'Root',\n        sub: 'Sub-folder',\n        ok: 'Pass',\n        error: 'Fail',\n        star: '*',\n        up: '^',\n        down: 'v'\n    }\n};\n\n/**\n * A method that picks the appropriate set of CLI report symbols under a given set of run conditions.\n *\n * @param  {Boolean} disableUnicode - A flag to force plain text equivalents for CLI symbols if set to true.\n * @returns {Object} - The right set of symbols from subsets for the given conditions.\n * @todo Add additional parameter related to temp file read - writes\n */\nsymbols = function (disableUnicode) {\n    if (disableUnicode) {\n        return subsets.plainText;\n    }\n    if (IS_WINDOWS) { // modify symbols for windows platforms\n        return subsets.encoded;\n    }\n\n    return subsets.regular;\n};\n\nmodule.exports = symbols;\n"],"mappings":"AAAA,IAAIA,UAAU,GAAI,MAAM,CAAEC,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC;EAC5CC,OAAO;EACPC,OAAO;;AAEX;AACA;AACA;AACA;AACA;AACAD,OAAO,GAAG;EACNE,OAAO,EAAE;IACLC,OAAO,EAAE;MACLC,GAAG,EAAE,GAAG;MACRC,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE;IACZ,CAAC;IACDC,GAAG,EAAE,GAAG;IACRC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,GAAG;IACTC,GAAG,EAAE,GAAG;IACRC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,GAAG;IACTC,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACLb,OAAO,EAAE;MACLC,GAAG,EAAE,QAAQ;MACbC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE;IACZ,CAAC;IACDC,GAAG,EAAE,GAAG;IACRC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,QAAQ;IACdC,GAAG,EAAE,QAAQ;IACbC,EAAE,EAAE,QAAQ;IACZC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,QAAQ;IACdC,EAAE,EAAE,QAAQ;IACZC,IAAI,EAAE;EACV,CAAC;EACDE,SAAS,EAAE;IACPd,OAAO,EAAE;MACLC,GAAG,EAAE,GAAG;MACRC,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE;IACZ,CAAC;IACDC,GAAG,EAAE,GAAG;IACRC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAE,YAAY;IACjBC,EAAE,EAAE,MAAM;IACVC,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE,GAAG;IACTC,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE;EACV;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAd,OAAO,GAAG,UAAUiB,cAAc,EAAE;EAChC,IAAIA,cAAc,EAAE;IAChB,OAAOlB,OAAO,CAACiB,SAAS;EAC5B;EACA,IAAIrB,UAAU,EAAE;IAAE;IACd,OAAOI,OAAO,CAACgB,OAAO;EAC1B;EAEA,OAAOhB,OAAO,CAACE,OAAO;AAC1B,CAAC;AAEDiB,MAAM,CAACC,OAAO,GAAGnB,OAAO"},"metadata":{},"sourceType":"script"}