{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectFileSync = exports.detectFile = exports.analyse = exports.detect = void 0;\nconst node_1 = __importDefault(require(\"./fs/node\"));\nconst utf8_1 = __importDefault(require(\"./encoding/utf8\"));\nconst unicode = __importStar(require(\"./encoding/unicode\"));\nconst mbcs = __importStar(require(\"./encoding/mbcs\"));\nconst sbcs = __importStar(require(\"./encoding/sbcs\"));\nconst iso2022 = __importStar(require(\"./encoding/iso2022\"));\nconst recognisers = [new utf8_1.default(), new unicode.UTF_16BE(), new unicode.UTF_16LE(), new unicode.UTF_32BE(), new unicode.UTF_32LE(), new mbcs.sjis(), new mbcs.big5(), new mbcs.euc_jp(), new mbcs.euc_kr(), new mbcs.gb_18030(), new iso2022.ISO_2022_JP(), new iso2022.ISO_2022_KR(), new iso2022.ISO_2022_CN(), new sbcs.ISO_8859_1(), new sbcs.ISO_8859_2(), new sbcs.ISO_8859_5(), new sbcs.ISO_8859_6(), new sbcs.ISO_8859_7(), new sbcs.ISO_8859_8(), new sbcs.ISO_8859_9(), new sbcs.windows_1251(), new sbcs.windows_1256(), new sbcs.KOI8_R()];\nconst detect = buffer => {\n  const matches = (0, exports.analyse)(buffer);\n  return matches.length > 0 ? matches[0].name : null;\n};\nexports.detect = detect;\nconst analyse = buffer => {\n  const byteStats = [];\n  for (let i = 0; i < 256; i++) byteStats[i] = 0;\n  for (let i = buffer.length - 1; i >= 0; i--) byteStats[buffer[i] & 0x00ff]++;\n  let c1Bytes = false;\n  for (let i = 0x80; i <= 0x9f; i += 1) {\n    if (byteStats[i] !== 0) {\n      c1Bytes = true;\n      break;\n    }\n  }\n  const context = {\n    byteStats,\n    c1Bytes,\n    rawInput: buffer,\n    rawLen: buffer.length,\n    inputBytes: buffer,\n    inputLen: buffer.length\n  };\n  const matches = recognisers.map(rec => {\n    return rec.match(context);\n  }).filter(match => {\n    return !!match;\n  }).sort((a, b) => {\n    return b.confidence - a.confidence;\n  });\n  return matches;\n};\nexports.analyse = analyse;\nconst detectFile = function (filepath) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise((resolve, reject) => {\n    let fd;\n    const fs = (0, node_1.default)();\n    const handler = (err, buffer) => {\n      if (fd) {\n        fs.closeSync(fd);\n      }\n      if (err) {\n        reject(err);\n      } else {\n        resolve((0, exports.detect)(buffer));\n      }\n    };\n    if (opts && opts.sampleSize) {\n      fd = fs.openSync(filepath, 'r');\n      const sample = Buffer.allocUnsafe(opts.sampleSize);\n      fs.read(fd, sample, 0, opts.sampleSize, null, err => {\n        handler(err, sample);\n      });\n      return;\n    }\n    fs.readFile(filepath, handler);\n  });\n};\nexports.detectFile = detectFile;\nconst detectFileSync = function (filepath) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const fs = (0, node_1.default)();\n  if (opts && opts.sampleSize) {\n    const fd = fs.openSync(filepath, 'r');\n    const sample = Buffer.allocUnsafe(opts.sampleSize);\n    fs.readSync(fd, sample, 0, opts.sampleSize);\n    fs.closeSync(fd);\n    return (0, exports.detect)(sample);\n  }\n  return (0, exports.detect)(fs.readFileSync(filepath));\n};\nexports.detectFileSync = detectFileSync;\nexports.default = {\n  analyse: exports.analyse,\n  detect: exports.detect,\n  detectFileSync: exports.detectFileSync,\n  detectFile: exports.detectFile\n};","map":{"version":3,"mappings":"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","names":["recognisers","utf8_1","unicode","UTF_16BE","UTF_16LE","UTF_32BE","UTF_32LE","mbcs","sjis","big5","euc_jp","euc_kr","gb_18030","iso2022","ISO_2022_JP","ISO_2022_KR","ISO_2022_CN","sbcs","ISO_8859_1","ISO_8859_2","ISO_8859_5","ISO_8859_6","ISO_8859_7","ISO_8859_8","ISO_8859_9","windows_1251","windows_1256","KOI8_R","detect","buffer","matches","length","name","exports","analyse","byteStats","i","c1Bytes","context","rawInput","rawLen","inputBytes","inputLen","map","rec","match","filter","sort","a","b","confidence","detectFile","filepath","opts","Promise","resolve","reject","fd","fs","handler","err","closeSync","sampleSize","openSync","sample","Buffer","allocUnsafe","read","readFile","detectFileSync","readSync","readFileSync"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}