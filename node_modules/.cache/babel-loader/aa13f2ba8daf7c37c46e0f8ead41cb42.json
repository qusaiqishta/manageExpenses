{"ast":null,"code":"var _jsxFileName = \"/Users/Qusai.Qishta/Desktop/react-complete-guid/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n& .new-expense__controls {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1rem;\n    margin-bottom: 1rem;\n    text-align: left;\n  }\n  \n  & .new-expense__control label {\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    display: block;\n  }\n  \n  &.new-expense__control input {\n    font: inherit;\n    padding: 0.5rem;\n    border-radius: 6px;\n    border: 1px solid #ccc;\n    width: 20rem;\n    max-width: 100%;\n  }\n  \n  &.new-expense__actions {\n    text-align: right;\n  }\n\n&.new-expense__controls.invalid input {\n  border-color:red;\n  background-color: chocolate;\n  }\n  `;\nfunction ExpenseForm(props) {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const showF = () => {\n    setShowForm(!showForm);\n  };\n  const [userInput, setUserInput] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\"\n  });\n  const tileChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        title: event.target.value\n      };\n    });\n  };\n  const amountChangeHandler = event => {\n    if (event.target.value > 0) {\n      setIsValid(true);\n    }\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        amount: event.target.value\n      };\n    });\n  };\n  const dateChangeHandler = event => {\n    if (event.target.value) {\n      setIsValid(true);\n    }\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        date: event.target.value\n      };\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseDate = {\n      title: userInput.title,\n      amount: +userInput.amount,\n      date: new Date(userInput.date)\n    };\n    setUserInput({\n      title: \"\",\n      amount: \"\",\n      date: \"\"\n    });\n    if (!Object.values(expenseDate).every(x => x !== null && x !== \"\")) {\n      setIsValid(false);\n      return;\n    }\n    props.onSaveExpenseData(expenseDate);\n    showF();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showF,\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `new-expense__controls ${!isValid ? 'invalid' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput.title,\n            onChange: tileChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            step: \"1\",\n            value: userInput.amount,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"1-1-2019\",\n            max: \"31-12-2022\",\n            value: userInput.date,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: showF,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseForm, \"PjC31Iilt3hsV+97jDEueWlIzUg=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","styled","Form","form","ExpenseForm","props","showForm","setShowForm","isValid","setIsValid","showF","userInput","setUserInput","title","amount","date","tileChangeHandler","event","target","value","trim","length","prevState","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseDate","Date","Object","values","every","x","onSaveExpenseData"],"sources":["/Users/Qusai.Qishta/Desktop/react-complete-guid/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport styled from \"styled-components\";\nconst Form=styled.form`\n& .new-expense__controls {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1rem;\n    margin-bottom: 1rem;\n    text-align: left;\n  }\n  \n  & .new-expense__control label {\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    display: block;\n  }\n  \n  &.new-expense__control input {\n    font: inherit;\n    padding: 0.5rem;\n    border-radius: 6px;\n    border: 1px solid #ccc;\n    width: 20rem;\n    max-width: 100%;\n  }\n  \n  &.new-expense__actions {\n    text-align: right;\n  }\n\n&.new-expense__controls.invalid input {\n  border-color:red;\n  background-color: chocolate;\n  }\n  `\n\nfunction ExpenseForm(props) {\n  const [showForm, setShowForm] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const showF = () => {\n    setShowForm(!showForm);\n  };\n  const [userInput, setUserInput] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\",\n  });\n  const tileChangeHandler = (event) => {\n    if(event.target.value.trim().length>0){\n        setIsValid(true)\n    }\n    setUserInput((prevState) => {\n      return { ...prevState, title: event.target.value };\n    });\n  };\n  const amountChangeHandler = (event) => {\n    if(event.target.value>0){\n        setIsValid(true)\n    }\n    setUserInput((prevState) => {\n      return { ...prevState, amount: event.target.value };\n    });\n  };\n  const dateChangeHandler = (event) => {\n    if(event.target.value){\n        setIsValid(true)\n    }\n    setUserInput((prevState) => {\n      return { ...prevState, date: event.target.value };\n    });\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseDate = {\n      title: userInput.title,\n      amount: +userInput.amount,\n      date: new Date(userInput.date),\n    };\n    setUserInput({\n      title: \"\",\n      amount: \"\",\n      date: \"\",\n    });\n\n    if (!Object.values(expenseDate).every((x) => x !== null && x !== \"\")) {\n      setIsValid(false);\n      return;\n    }\n    props.onSaveExpenseData(expenseDate);\n    showF();\n  };\n  return (\n    <div>\n      <button onClick={showF}>Add Expense</button>\n      {showForm && (\n        <form onSubmit={submitHandler}>\n          <div className={`new-expense__controls ${!isValid?'invalid':''}`}>\n            <div className=\"new-expense__control\">\n              <label>Title</label>\n              <input\n                type=\"text\"\n                value={userInput.title}\n                onChange={tileChangeHandler}\n                \n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Amount</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                step=\"1\"\n                value={userInput.amount}\n                onChange={amountChangeHandler}\n                \n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Date</label>\n              <input\n                type=\"date\"\n                min=\"1-1-2019\"\n                max=\"31-12-2022\"\n                value={userInput.date}\n                onChange={dateChangeHandler}\n               \n              />\n            </div>\n            <div className=\"new-expense__actions\">\n              <button type=\"submit\"> Add Expense</button>\n              <button type=\"button\" onClick={showF}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default ExpenseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}