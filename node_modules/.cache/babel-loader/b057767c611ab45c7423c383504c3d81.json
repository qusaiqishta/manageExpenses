{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nvar _utils = require('./utils');\nvar _exception = require('./exception');\nvar _exception2 = _interopRequireDefault(_exception);\nvar _helpers = require('./helpers');\nvar _decorators = require('./decorators');\nvar _logger = require('./logger');\nvar _logger2 = _interopRequireDefault(_logger);\nvar _internalProtoAccess = require('./internal/proto-access');\nvar VERSION = '4.7.7';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 8;\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar LAST_COMPATIBLE_COMPILER_REVISION = 7;\nexports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2',\n  // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar objectType = '[object Object]';\nfunction HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n  _helpers.registerDefaultHelpers(this);\n  _decorators.registerDefaultDecorators(this);\n}\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n  logger: _logger2['default'],\n  log: _logger2['default'].log,\n  registerHelper: function registerHelper(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple helpers');\n      }\n      _utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n  registerPartial: function registerPartial(name, partial) {\n    if (_utils.toString.call(name) === objectType) {\n      _utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  },\n  registerDecorator: function registerDecorator(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple decorators');\n      }\n      _utils.extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function unregisterDecorator(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {\n    _internalProtoAccess.resetLoggedProperties();\n  }\n};\nvar log = _logger2['default'].log;\nexports.log = log;\nexports.createFrame = _utils.createFrame;\nexports.logger = _logger2['default'];","map":{"version":3,"mappings":";;;;;;;;;;;qBAA8C,SAAS;yBACjC,aAAa;;uBACI,WAAW;0BACR,cAAc;sBACrC,UAAU;;mCACS,yBAAyB;AAExD,IAAMA,OAAO,GAAG,OAAO;;AACvB,IAAMC,iBAAiB,GAAG,CAAC;;AAC3B,IAAMC,iCAAiC,GAAG,CAAC;;AAE3C,IAAMC,gBAAgB,GAAG;EAC9B,CAAC,EAAE,aAAa;EAAA;EAChB,CAAC,EAAE,eAAe;EAClB,CAAC,EAAE,eAAe;EAClB,CAAC,EAAE,UAAU;EACb,CAAC,EAAE,kBAAkB;EACrB,CAAC,EAAE,iBAAiB;EACpB,CAAC,EAAE,iBAAiB;EACpB,CAAC,EAAE;CACJ;;AAED,IAAMC,UAAU,GAAG,iBAAiB;AAE7B,SAASC,qBAAqB,CAACC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACnE,IAAI,CAACF,OAAO,GAAGA,OAAO,IAAI,EAAE;EAC5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ,IAAI,EAAE;EAC9B,IAAI,CAACC,UAAU,GAAGA,UAAU,IAAI,EAAE;EAElCC,gCAAuB,IAAI,CAAC;EAC5BC,sCAA0B,IAAI,CAAC;;AAGjCL,qBAAqB,CAACM,SAAS,GAAG;EAChCC,WAAW,EAAEP,qBAAqB;EAElCQ,MAAM,qBAAQ;EACdC,GAAG,EAAEC,oBAAOD,GAAG;EAEfE,cAAc,EAAE,wBAASC,IAAI,EAAEC,EAAE,EAAE;IACjC,IAAIC,gBAASC,IAAI,CAACH,IAAI,CAAC,KAAKb,UAAU,EAAE;MACtC,IAAIc,EAAE,EAAE;QACN,MAAM,2BAAc,yCAAyC,CAAC;;MAEhEC,cAAO,IAAI,CAACb,OAAO,EAAEW,IAAI,CAAC;KAC3B,MAAM;MACL,IAAI,CAACX,OAAO,CAACW,IAAI,CAAC,GAAGC,EAAE;;GAE1B;EACDG,gBAAgB,EAAE,0BAASJ,IAAI,EAAE;IAC/B,OAAO,IAAI,CAACX,OAAO,CAACW,IAAI,CAAC;GAC1B;EAEDK,eAAe,EAAE,yBAASL,IAAI,EAAEM,OAAO,EAAE;IACvC,IAAIJ,gBAASC,IAAI,CAACH,IAAI,CAAC,KAAKb,UAAU,EAAE;MACtCe,cAAO,IAAI,CAACZ,QAAQ,EAAEU,IAAI,CAAC;KAC5B,MAAM;MACL,IAAI,OAAOM,OAAO,KAAK,WAAW,EAAE;QAClC,MAAM,yEACwCN,IAAI,oBACjD;;MAEH,IAAI,CAACV,QAAQ,CAACU,IAAI,CAAC,GAAGM,OAAO;;GAEhC;EACDC,iBAAiB,EAAE,2BAASP,IAAI,EAAE;IAChC,OAAO,IAAI,CAACV,QAAQ,CAACU,IAAI,CAAC;GAC3B;EAEDQ,iBAAiB,EAAE,2BAASR,IAAI,EAAEC,EAAE,EAAE;IACpC,IAAIC,gBAASC,IAAI,CAACH,IAAI,CAAC,KAAKb,UAAU,EAAE;MACtC,IAAIc,EAAE,EAAE;QACN,MAAM,2BAAc,4CAA4C,CAAC;;MAEnEC,cAAO,IAAI,CAACX,UAAU,EAAES,IAAI,CAAC;KAC9B,MAAM;MACL,IAAI,CAACT,UAAU,CAACS,IAAI,CAAC,GAAGC,EAAE;;GAE7B;EACDQ,mBAAmB,EAAE,6BAAST,IAAI,EAAE;IAClC,OAAO,IAAI,CAACT,UAAU,CAACS,IAAI,CAAC;GAC7B;;;;;EAKDU,2BAA2B,yCAAG;IAC5BC,4CAAuB;;CAE1B;AAEM,IAAId,GAAG,GAAGC,oBAAOD,GAAG;;QAElBe,WAAW;QAAEhB,MAAM","names":["VERSION","COMPILER_REVISION","LAST_COMPATIBLE_COMPILER_REVISION","REVISION_CHANGES","objectType","HandlebarsEnvironment","helpers","partials","decorators","_helpers","_decorators","prototype","constructor","logger","log","_logger2","registerHelper","name","fn","_utils","call","unregisterHelper","registerPartial","partial","unregisterPartial","registerDecorator","unregisterDecorator","resetLoggedPropertyAccesses","_internalProtoAccess","createFrame"],"sources":["../../../lib/handlebars/base.js"],"sourcesContent":["import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.7';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n"]},"metadata":{},"sourceType":"script"}