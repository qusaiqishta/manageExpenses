{"ast":null,"code":"var _ = require('lodash'),\n  sdk = require('postman-collection'),\n  createItemContext = require('../create-item-context'),\n  /**\n   * Resolve variables in item and auth in context.\n   *\n   * @param {ItemContext} context -\n   * @param {Item} [context.item] -\n   * @param {RequestAuth} [context.auth] -\n   * @param {Object} payload -\n   * @param {VariableScope} payload._variables -\n   * @param {Object} payload.data -\n   * @param {VariableScope} payload.environment -\n   * @param {VariableScope} payload.collectionVariables -\n   * @param {VariableScope} payload.globals -\n   */\n  resolveVariables = function (context, payload) {\n    if (!(context.item && context.item.request)) {\n      return;\n    }\n\n    // @todo - resolve variables in a more graceful way\n    var variableDefinitions = [\n      // extract the variable list from variable scopes\n      // @note: this is the order of precedence for variable resolution - don't change it\n      payload._variables.values, payload.data, payload.environment.values, payload.collectionVariables.values, payload.globals.values],\n      urlString = context.item.request.url.toString(),\n      item,\n      auth;\n\n    // @todo - no need to sync variables when SDK starts supporting resolution from scope directly\n    // @todo - avoid resolving the entire item as this unnecessarily resolves URL\n    item = context.item = new sdk.Item(context.item.toObjectResolved(null, variableDefinitions, {\n      ignoreOwnVariables: true\n    }));\n    auth = context.auth;\n\n    // resolve variables in URL string\n    if (urlString) {\n      // @note this adds support resolving nested variables as URL parser doesn't support them well.\n      urlString = sdk.Property.replaceSubstitutions(urlString, variableDefinitions);\n\n      // Re-parse the URL from the resolved string\n      item.request.url = new sdk.Url(urlString);\n    }\n\n    // resolve variables in auth\n    auth && (context.auth = new sdk.RequestAuth(auth.toObjectResolved(null, variableDefinitions, {\n      ignoreOwnVariables: true\n    })));\n  };\nmodule.exports = {\n  init: function (done) {\n    done();\n  },\n  triggers: ['response'],\n  process: {\n    request(payload, next) {\n      var abortOnError = _.has(payload, 'abortOnError') ? payload.abortOnError : this.options.abortOnError,\n        // helper function to trigger `response` callback anc complete the command\n        complete = function (err, nextPayload) {\n          // nextPayload will be empty for unhandled errors\n          // trigger `response` callback\n          // nextPayload.response will be empty for error flows\n          // the `item` argument is resolved and mutated here\n          nextPayload && this.triggers.response(err, nextPayload.coords, nextPayload.response, nextPayload.request, nextPayload.item, nextPayload.cookies, nextPayload.history);\n\n          // the error is passed twice to allow control between aborting the error vs just\n          // bubbling it up\n          return next(err && abortOnError ? err : null, nextPayload, err);\n        }.bind(this),\n        context = createItemContext(payload);\n\n      // resolve variables in item and auth\n      resolveVariables(context, payload);\n\n      // add context for use, after resolution\n      payload.context = context;\n\n      // we do not queue `httprequest` instruction here,\n      // queueing will unblock the item command to prepare for the next `event` instruction\n      // at this moment request is not fulfilled, and we want to block it\n      this.immediate('httprequest', payload).done(function (nextPayload, err) {\n        // change signature to error first\n        complete(err, nextPayload);\n      }).catch(complete);\n    }\n  }\n};","map":{"version":3,"names":["_","require","sdk","createItemContext","resolveVariables","context","payload","item","request","variableDefinitions","_variables","values","data","environment","collectionVariables","globals","urlString","url","toString","auth","Item","toObjectResolved","ignoreOwnVariables","Property","replaceSubstitutions","Url","RequestAuth","module","exports","init","done","triggers","process","next","abortOnError","has","options","complete","err","nextPayload","response","coords","cookies","history","bind","immediate","catch"],"sources":["/Users/Qusai.Qishta/node_modules/postman-runtime/lib/runner/extensions/request.command.js"],"sourcesContent":["var _ = require('lodash'),\n    sdk = require('postman-collection'),\n\n    createItemContext = require('../create-item-context'),\n\n    /**\n     * Resolve variables in item and auth in context.\n     *\n     * @param {ItemContext} context -\n     * @param {Item} [context.item] -\n     * @param {RequestAuth} [context.auth] -\n     * @param {Object} payload -\n     * @param {VariableScope} payload._variables -\n     * @param {Object} payload.data -\n     * @param {VariableScope} payload.environment -\n     * @param {VariableScope} payload.collectionVariables -\n     * @param {VariableScope} payload.globals -\n     */\n    resolveVariables = function (context, payload) {\n        if (!(context.item && context.item.request)) { return; }\n\n        // @todo - resolve variables in a more graceful way\n        var variableDefinitions = [\n                // extract the variable list from variable scopes\n                // @note: this is the order of precedence for variable resolution - don't change it\n                payload._variables.values,\n                payload.data,\n                payload.environment.values,\n                payload.collectionVariables.values,\n                payload.globals.values\n            ],\n            urlString = context.item.request.url.toString(),\n            item,\n            auth;\n\n        // @todo - no need to sync variables when SDK starts supporting resolution from scope directly\n        // @todo - avoid resolving the entire item as this unnecessarily resolves URL\n        item = context.item = new sdk.Item(context.item.toObjectResolved(null,\n            variableDefinitions, { ignoreOwnVariables: true }));\n\n        auth = context.auth;\n\n        // resolve variables in URL string\n        if (urlString) {\n            // @note this adds support resolving nested variables as URL parser doesn't support them well.\n            urlString = sdk.Property.replaceSubstitutions(urlString, variableDefinitions);\n\n            // Re-parse the URL from the resolved string\n            item.request.url = new sdk.Url(urlString);\n        }\n\n        // resolve variables in auth\n        auth && (context.auth = new sdk.RequestAuth(auth.toObjectResolved(null,\n            variableDefinitions, { ignoreOwnVariables: true })));\n    };\n\nmodule.exports = {\n    init: function (done) {\n        done();\n    },\n\n    triggers: ['response'],\n\n    process: {\n        request (payload, next) {\n            var abortOnError = _.has(payload, 'abortOnError') ? payload.abortOnError : this.options.abortOnError,\n\n                // helper function to trigger `response` callback anc complete the command\n                complete = function (err, nextPayload) {\n                    // nextPayload will be empty for unhandled errors\n                    // trigger `response` callback\n                    // nextPayload.response will be empty for error flows\n                    // the `item` argument is resolved and mutated here\n                    nextPayload && this.triggers.response(err, nextPayload.coords, nextPayload.response,\n                        nextPayload.request, nextPayload.item, nextPayload.cookies, nextPayload.history);\n\n                    // the error is passed twice to allow control between aborting the error vs just\n                    // bubbling it up\n                    return next(err && abortOnError ? err : null, nextPayload, err);\n                }.bind(this),\n                context = createItemContext(payload);\n\n            // resolve variables in item and auth\n            resolveVariables(context, payload);\n\n            // add context for use, after resolution\n            payload.context = context;\n\n            // we do not queue `httprequest` instruction here,\n            // queueing will unblock the item command to prepare for the next `event` instruction\n            // at this moment request is not fulfilled, and we want to block it\n            this.immediate('httprequest', payload)\n                .done(function (nextPayload, err) {\n                    // change signature to error first\n                    complete(err, nextPayload);\n                })\n                .catch(complete);\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}