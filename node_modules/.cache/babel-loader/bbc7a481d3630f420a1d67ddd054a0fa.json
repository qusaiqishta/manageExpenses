{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst match_1 = __importDefault(require(\"../match\"));\nclass Utf8 {\n  name() {\n    return 'UTF-8';\n  }\n  match(det) {\n    let hasBOM = false,\n      numValid = 0,\n      numInvalid = 0,\n      trailBytes = 0,\n      confidence;\n    const input = det.rawInput;\n    if (det.rawLen >= 3 && (input[0] & 0xff) == 0xef && (input[1] & 0xff) == 0xbb && (input[2] & 0xff) == 0xbf) {\n      hasBOM = true;\n    }\n    for (let i = 0; i < det.rawLen; i++) {\n      const b = input[i];\n      if ((b & 0x80) == 0) continue;\n      if ((b & 0x0e0) == 0x0c0) {\n        trailBytes = 1;\n      } else if ((b & 0x0f0) == 0x0e0) {\n        trailBytes = 2;\n      } else if ((b & 0x0f8) == 0xf0) {\n        trailBytes = 3;\n      } else {\n        numInvalid++;\n        if (numInvalid > 5) break;\n        trailBytes = 0;\n      }\n      for (;;) {\n        i++;\n        if (i >= det.rawLen) break;\n        if ((input[i] & 0xc0) != 0x080) {\n          numInvalid++;\n          break;\n        }\n        if (--trailBytes == 0) {\n          numValid++;\n          break;\n        }\n      }\n    }\n    confidence = 0;\n    if (hasBOM && numInvalid == 0) confidence = 100;else if (hasBOM && numValid > numInvalid * 10) confidence = 80;else if (numValid > 3 && numInvalid == 0) confidence = 100;else if (numValid > 0 && numInvalid == 0) confidence = 80;else if (numValid == 0 && numInvalid == 0) confidence = 10;else if (numValid > numInvalid * 10) confidence = 25;else return null;\n    return (0, match_1.default)(det, this, confidence);\n  }\n}\nexports.default = Utf8;","map":{"version":3,"mappings":";;;;;;;;;;AACA;AAEA,MAAqBA,IAAI;EACvBC,IAAI;IACF,OAAO,OAAO;EAChB;EAEAC,KAAK,CAACC,GAAY;IAChB,IAAIC,MAAM,GAAG,KAAK;MAChBC,QAAQ,GAAG,CAAC;MACZC,UAAU,GAAG,CAAC;MACdC,UAAU,GAAG,CAAC;MACdC,UAAU;IACZ,MAAMC,KAAK,GAAGN,GAAG,CAACO,QAAQ;IAE1B,IACEP,GAAG,CAACQ,MAAM,IAAI,CAAC,IACf,CAACF,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,IAAI,IACzB,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,IAAI,IACzB,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,IAAI,EACzB;MACAL,MAAM,GAAG,IAAI;;IAIf,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,GAAG,CAACQ,MAAM,EAAEC,CAAC,EAAE,EAAE;MACnC,MAAMC,CAAC,GAAGJ,KAAK,CAACG,CAAC,CAAC;MAClB,IAAI,CAACC,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE;MAGrB,IAAI,CAACA,CAAC,GAAG,KAAK,KAAK,KAAK,EAAE;QACxBN,UAAU,GAAG,CAAC;OACf,MAAM,IAAI,CAACM,CAAC,GAAG,KAAK,KAAK,KAAK,EAAE;QAC/BN,UAAU,GAAG,CAAC;OACf,MAAM,IAAI,CAACM,CAAC,GAAG,KAAK,KAAK,IAAI,EAAE;QAC9BN,UAAU,GAAG,CAAC;OACf,MAAM;QACLD,UAAU,EAAE;QACZ,IAAIA,UAAU,GAAG,CAAC,EAAE;QACpBC,UAAU,GAAG,CAAC;;MAIhB,SAAS;QACPK,CAAC,EAAE;QACH,IAAIA,CAAC,IAAIT,GAAG,CAACQ,MAAM,EAAE;QAErB,IAAI,CAACF,KAAK,CAACG,CAAC,CAAC,GAAG,IAAI,KAAK,KAAK,EAAE;UAC9BN,UAAU,EAAE;UACZ;;QAEF,IAAI,EAAEC,UAAU,IAAI,CAAC,EAAE;UACrBF,QAAQ,EAAE;UACV;;;;IAONG,UAAU,GAAG,CAAC;IACd,IAAIJ,MAAM,IAAIE,UAAU,IAAI,CAAC,EAAEE,UAAU,GAAG,GAAG,CAAC,KAC3C,IAAIJ,MAAM,IAAIC,QAAQ,GAAGC,UAAU,GAAG,EAAE,EAAEE,UAAU,GAAG,EAAE,CAAC,KAC1D,IAAIH,QAAQ,GAAG,CAAC,IAAIC,UAAU,IAAI,CAAC,EAAEE,UAAU,GAAG,GAAG,CAAC,KACtD,IAAIH,QAAQ,GAAG,CAAC,IAAIC,UAAU,IAAI,CAAC,EAAEE,UAAU,GAAG,EAAE,CAAC,KACrD,IAAIH,QAAQ,IAAI,CAAC,IAAIC,UAAU,IAAI,CAAC,EAEvCE,UAAU,GAAG,EAAE,CAAC,KACb,IAAIH,QAAQ,GAAGC,UAAU,GAAG,EAAE,EAEjCE,UAAU,GAAG,EAAE,CAAC,KACb,OAAO,IAAI;IAEhB,OAAO,mBAAK,EAACL,GAAG,EAAE,IAAI,EAAEK,UAAU,CAAC;EACrC;;AAxEFM","names":["Utf8","name","match","det","hasBOM","numValid","numInvalid","trailBytes","confidence","input","rawInput","rawLen","i","b","exports"],"sourceRoot":"","sources":["../../src/encoding/utf8.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}