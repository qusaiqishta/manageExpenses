{"ast":null,"code":"'use strict';\n\nvar jsonSafeStringify = require('json-stringify-safe');\nvar crypto = require('crypto');\nvar Buffer = require('safe-buffer').Buffer;\nvar defer = typeof setImmediate === 'undefined' ? process.nextTick : setImmediate;\n\n// Reference: https://github.com/postmanlabs/postman-request/pull/23\n//\n// function paramsHaveRequestBody (params) {\n//   return (\n//     params.body ||\n//     params.requestBodyStream ||\n//     (params.json && typeof params.json !== 'boolean') ||\n//     params.multipart\n//   )\n// }\n\nfunction safeStringify(obj, replacer) {\n  var ret;\n  try {\n    ret = JSON.stringify(obj, replacer);\n  } catch (e) {\n    ret = jsonSafeStringify(obj, replacer);\n  }\n  return ret;\n}\nfunction md5(str) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\nfunction isReadStream(rs) {\n  return rs.readable && rs.path && rs.mode;\n}\nfunction toBase64(str) {\n  return Buffer.from(str || '', 'utf8').toString('base64');\n}\nfunction copy(obj) {\n  var o = {};\n  Object.keys(obj).forEach(function (i) {\n    o[i] = obj[i];\n  });\n  return o;\n}\nfunction version() {\n  var numbers = process.version.replace('v', '').split('.');\n  return {\n    major: parseInt(numbers[0], 10),\n    minor: parseInt(numbers[1], 10),\n    patch: parseInt(numbers[2], 10)\n  };\n}\nexports.safeStringify = safeStringify;\nexports.md5 = md5;\nexports.isReadStream = isReadStream;\nexports.toBase64 = toBase64;\nexports.copy = copy;\nexports.version = version;\nexports.defer = defer;","map":{"version":3,"names":["jsonSafeStringify","require","crypto","Buffer","defer","setImmediate","process","nextTick","safeStringify","obj","replacer","ret","JSON","stringify","e","md5","str","createHash","update","digest","isReadStream","rs","readable","path","mode","toBase64","from","toString","copy","o","Object","keys","forEach","i","version","numbers","replace","split","major","parseInt","minor","patch","exports"],"sources":["/Users/Qusai.Qishta/node_modules/postman-request/lib/helpers.js"],"sourcesContent":["'use strict'\n\nvar jsonSafeStringify = require('json-stringify-safe')\nvar crypto = require('crypto')\nvar Buffer = require('safe-buffer').Buffer\n\nvar defer = typeof setImmediate === 'undefined'\n  ? process.nextTick\n  : setImmediate\n\n// Reference: https://github.com/postmanlabs/postman-request/pull/23\n//\n// function paramsHaveRequestBody (params) {\n//   return (\n//     params.body ||\n//     params.requestBodyStream ||\n//     (params.json && typeof params.json !== 'boolean') ||\n//     params.multipart\n//   )\n// }\n\nfunction safeStringify (obj, replacer) {\n  var ret\n  try {\n    ret = JSON.stringify(obj, replacer)\n  } catch (e) {\n    ret = jsonSafeStringify(obj, replacer)\n  }\n  return ret\n}\n\nfunction md5 (str) {\n  return crypto.createHash('md5').update(str).digest('hex')\n}\n\nfunction isReadStream (rs) {\n  return rs.readable && rs.path && rs.mode\n}\n\nfunction toBase64 (str) {\n  return Buffer.from(str || '', 'utf8').toString('base64')\n}\n\nfunction copy (obj) {\n  var o = {}\n  Object.keys(obj).forEach(function (i) {\n    o[i] = obj[i]\n  })\n  return o\n}\n\nfunction version () {\n  var numbers = process.version.replace('v', '').split('.')\n  return {\n    major: parseInt(numbers[0], 10),\n    minor: parseInt(numbers[1], 10),\n    patch: parseInt(numbers[2], 10)\n  }\n}\n\nexports.safeStringify = safeStringify\nexports.md5 = md5\nexports.isReadStream = isReadStream\nexports.toBase64 = toBase64\nexports.copy = copy\nexports.version = version\nexports.defer = defer\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtD,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAa,CAAC,CAACE,MAAM;AAE1C,IAAIC,KAAK,GAAG,OAAOC,YAAY,KAAK,WAAW,GAC3CC,OAAO,CAACC,QAAQ,GAChBF,YAAY;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,aAAa,CAAEC,GAAG,EAAEC,QAAQ,EAAE;EACrC,IAAIC,GAAG;EACP,IAAI;IACFA,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACJ,GAAG,EAAEC,QAAQ,CAAC;EACrC,CAAC,CAAC,OAAOI,CAAC,EAAE;IACVH,GAAG,GAAGX,iBAAiB,CAACS,GAAG,EAAEC,QAAQ,CAAC;EACxC;EACA,OAAOC,GAAG;AACZ;AAEA,SAASI,GAAG,CAAEC,GAAG,EAAE;EACjB,OAAOd,MAAM,CAACe,UAAU,CAAC,KAAK,CAAC,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,MAAM,CAAC,KAAK,CAAC;AAC3D;AAEA,SAASC,YAAY,CAAEC,EAAE,EAAE;EACzB,OAAOA,EAAE,CAACC,QAAQ,IAAID,EAAE,CAACE,IAAI,IAAIF,EAAE,CAACG,IAAI;AAC1C;AAEA,SAASC,QAAQ,CAAET,GAAG,EAAE;EACtB,OAAOb,MAAM,CAACuB,IAAI,CAACV,GAAG,IAAI,EAAE,EAAE,MAAM,CAAC,CAACW,QAAQ,CAAC,QAAQ,CAAC;AAC1D;AAEA,SAASC,IAAI,CAAEnB,GAAG,EAAE;EAClB,IAAIoB,CAAC,GAAG,CAAC,CAAC;EACVC,MAAM,CAACC,IAAI,CAACtB,GAAG,CAAC,CAACuB,OAAO,CAAC,UAAUC,CAAC,EAAE;IACpCJ,CAAC,CAACI,CAAC,CAAC,GAAGxB,GAAG,CAACwB,CAAC,CAAC;EACf,CAAC,CAAC;EACF,OAAOJ,CAAC;AACV;AAEA,SAASK,OAAO,GAAI;EAClB,IAAIC,OAAO,GAAG7B,OAAO,CAAC4B,OAAO,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EACzD,OAAO;IACLC,KAAK,EAAEC,QAAQ,CAACJ,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/BK,KAAK,EAAED,QAAQ,CAACJ,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/BM,KAAK,EAAEF,QAAQ,CAACJ,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;EAChC,CAAC;AACH;AAEAO,OAAO,CAAClC,aAAa,GAAGA,aAAa;AACrCkC,OAAO,CAAC3B,GAAG,GAAGA,GAAG;AACjB2B,OAAO,CAACtB,YAAY,GAAGA,YAAY;AACnCsB,OAAO,CAACjB,QAAQ,GAAGA,QAAQ;AAC3BiB,OAAO,CAACd,IAAI,GAAGA,IAAI;AACnBc,OAAO,CAACR,OAAO,GAAGA,OAAO;AACzBQ,OAAO,CAACtC,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script"}